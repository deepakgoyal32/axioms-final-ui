{"version":3,"sources":["webpack:///src/app/content/content.component.ts","webpack:///src/app/content/content.component.html","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/sidebar/sidebar.component.html","webpack:///src/app/loader.service.ts","webpack:///src/app/collection-name-search/collection-name-search.component.html","webpack:///src/app/collection-name-search/collection-name-search.component.ts","webpack:///src/app/balance-range-content/balance-range-content.component.ts","webpack:///src/app/balance-range-content/balance-range-content.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/by-nft-count-content/by-nft-count-content.component.ts","webpack:///src/app/by-nft-count-content/by-nft-count-content.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dialog/dialog.component.ts","webpack:///src/app/dialog/dialog.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/token-name-search/token-name-search.component.html","webpack:///src/app/token-name-search/token-name-search.component.ts","webpack:///src/app/range-content/range-content.component.ts","webpack:///src/app/range-content/range-content.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ContentComponent","http","loader","baseUrl","selectedValue","selectedSymbol","next","previous","records","value","SendRequest","page","console","log","displayProgressSpinnerInBlock","symbol","localStorage","getItem","getWalletAddressesForXPrice","subscribe","response","results","forEach","element","push","url","get","onScroll","selector","templateUrl","styleUrls","SidebarComponent","mode","color","clear","setItem","title","toString","setSymbol","setRange","setNftSymbol","LoaderService","providedIn","CollectionNameSearchComponent","isDisabled","myControl","InitialValues","event","target","matAutocomplete","options","first","select","getInitialSearchValues","pipe","item","option","contract_name","undefined","selectedOptionValue","contract_address","getWalletAddressesForExactCollectionSearch","onKeyUp","changeSelectedOption","Debounce","clickout","ms","key","descriptor","oldFunc","newFunc","apply","arguments","BalanceRangeContentComponent","minInputElement","maxInputElement","minValue","maxValue","floor","ceil","Number","nativeElement","getWalletAddressesForXPriceRange","alert","environment","production","ByNftCountContentComponent","dialog","address","open","data","height","width","nftSymbol","getWalletAddressesForXNFTCount","AppComponent","AppModule","declarations","imports","providers","bootstrap","entryComponents","DialogComponent","displayedColumns11","dataSource11","name","collection_name","token_id","getNFTNames","fetchNFTNames","HeaderComponent","totalNfts","totalWallets","type","Math","round","count","toFixed","FooterComponent","TokenNameSearchComponent","isLoading","val","selectedContractAddress","getWalletAddressesForExactNameSearch","RangeContentComponent","getWalletAddressesForPriceRange","min","max","routes","path","component","AppRoutingModule","forRoot","exports","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { LoaderService } from \"../loader.service\";\n\n@Component({\n  selector: \"app-content\",\n  templateUrl: \"./content.component.html\",\n  styleUrls: [\"./content.component.scss\"],\n})\nexport class ContentComponent implements OnInit {\n  baseUrl: string = 'http://52.22.129.105:9001'; //\"http://107.22.58.206:9000\";\n  selectedValue: any = \"0\";\n  selectedSymbol: string = \"gt\";\n  next: number = 0;\n  previous: number = 0;\n\n  records = [];\n\n  constructor(private http: HttpClient, public loader: LoaderService) {}\n\n  ngOnInit(): void {}\n\n  onScroll(value) {\n    this.SendRequest(value, this.next);\n  }\n\n  SendRequest(value: string, page: number) {\n    console.log(value);\n    console.log(this.selectedValue);\n    this.loader.displayProgressSpinnerInBlock = true;\n    this.next = 0;\n    this.previous = 0;\n    if(page <= 1)\n      this.records = [];\n      \n    let symbol = localStorage.getItem(\"symbol\");\n    this.getWalletAddressesForXPrice(value, symbol, page).subscribe(\n      (response) => {\n        response.results.forEach((element) => {\n          this.records.push(element);\n        });\n        if (\n          response.next &&\n          response.next.page &&\n          response.next.page !== \"\" &&\n          response.next.page !== 0\n        ) {\n          this.next = response.next.page;\n        }\n        if (\n          response.previous &&\n          response.previous.page &&\n          response.previous.page !== \"\" &&\n          response.previous.page !== 0\n        ) {\n          this.previous = response.previous.page;\n        }\n        this.loader.displayProgressSpinnerInBlock = false;\n      }\n    );\n  }\n\n  public getWalletAddressesForXPrice(\n    value: string,\n    symbol: string,\n    page: number\n  ): Observable<any> {\n    const url =\n      this.baseUrl +\n      \"/wallet/address?price=\" +\n      value +\n      \"&symbol=\" +\n      symbol +\n      \"&limit=50\" +\n      (page > 0 ? \"&page=\" + page : \"\");\n    console.log(url);\n    return this.http.get<any>(url);\n  }\n}\n","<div class=\"center\">\n    <h1>Wallets containing {{this.loader.title}} X Price</h1>\n    <form class=\"flex column align-center\">\n        <input matInput #todo placeholder=\"Input Values\" name=\"todo\">   \n        <button class=\"primary-btn\" style=\"cursor: pointer;\" (click)=\"SendRequest(todo.value, 1)\">Submit</button>\n    </form>\n\n    <div class=\"result\" *ngIf=\"records && records.length > 0\">Results</div>\n\n    <div class=\"result-wrapper flex justify-center\" infiniteScroll\n    [infiniteScrollDistance]=\"2\"\n    [infiniteScrollThrottle]=\"50\"\n    [scrollWindow]=\"true\"\n    [infiniteScrollContainer]=\"'.result-inner'\"\n    [fromRoot]=\"false\"\n    (scrolled)=\"onScroll(todo.value)\">\n        <div class=\"result-inner\">\n            <div class=\"row flex space-between\" *ngIf=\"records && records.length > 0\">\n                <div class=\"col head\">Wallet Address</div>\n                <div class=\"col head\">Balance</div>\n            </div>\n            <div class=\"row flex space-between\" *ngFor=\"let record of records;\">\n                <div class=\"col flex align-center no-wrap\"><img src=\"../../assets/images/wallet.png\" alt=\"Logo\" /> <a target=\"_blank\" href=\"https://etherscan.io/address/{{record.address}}\"  style=\"cursor: pointer;\">{{record.address}}</a></div>\n                <div class=\"col flex align-center\"><img src=\"../../assets/images/balance.svg\" alt=\"Logo\" class=\"count\" /> {{record.balance}}</div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LoaderService } from '../loader.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  mode = 'indeterminate';\n  value = 50;\n  color = 'primary';\n\n  constructor(public loader: LoaderService) { }\n\n  ngOnInit(): void {\n  }\n\n  setSymbol(value:string) {\n    localStorage.clear();\n    localStorage.setItem('symbol', value);\n    if(value === 'gt')\n      this.loader.title = \"more than\";\n    else if(value === 'lt')\n      this.loader.title = \"less than\";\n    else\n      this.loader.title = \"exactly\";\n  }\n\n  setRange(value: boolean) {\n    localStorage.clear();\n    localStorage.setItem('isRangeSlider', value.toString());\n  }\n\n  setNftSymbol(value:string) {\n    localStorage.clear();\n    localStorage.setItem('nftSymbol', value);\n    if(value === 'gt')\n      this.loader.title = \"more than\";\n    else if(value === 'lt')\n      this.loader.title = \"less than\";\n    else\n      this.loader.title = \"exactly\";\n  }\n}\n","<h3>Search BY</h3>\n\n<h3>Wallet</h3>\n\n<ul>\n    <li><a [routerLink]=\"['/']\" routerLinkActive=\"active\" (click)=\"setSymbol('gt');\" style=\"cursor: pointer;\">Value (greater than)</a></li>\n    <li><a [routerLink]=\"['/lt']\" routerLinkActive=\"active\" (click)=\"setSymbol('lt');\" style=\"cursor: pointer;\">Value (less than)</a></li>\n    <li><a [routerLink]=\"['/eq']\" routerLinkActive=\"active\" (click)=\"setSymbol('eq');\" style=\"cursor: pointer;\">Value (exact match)</a></li>\n    <li><a [routerLink]=\"['/bal-range']\" routerLinkActive=\"active\" (click)=\"setRange(true);\" style=\"cursor: pointer;\">Value (range)</a></li>\n</ul>\n\n<h3>NFT</h3>\n\n<ul>\n    <li><a [routerLink]=\"['/name-search']\" routerLinkActive=\"active\" style=\"cursor: pointer;\">By Name</a></li>\n    <li><a [routerLink]=\"['/collection-search']\" routerLinkActive=\"active\" style=\"cursor: pointer;\">By Collection</a></li>\n    <li><a [routerLink]=\"['/range']\" routerLinkActive=\"active\" (click)=\"setRange(true);\" style=\"cursor: pointer;\">NFT Price (range)</a></li>\n    <li><a [routerLink]=\"['/nft-gt']\" routerLinkActive=\"active\" (click)=\"setNftSymbol('gt');\" style=\"cursor: pointer;\"># of NFTs (greater than)</a></li>\n    <li><a [routerLink]=\"['/nft-lt']\" routerLinkActive=\"active\" (click)=\"setNftSymbol('lt');\" style=\"cursor: pointer;\"># of NFTs (less than)</a></li>\n    <li><a [routerLink]=\"['/nft-eq']\" routerLinkActive=\"active\" (click)=\"setNftSymbol('eq');\" style=\"cursor: pointer;\"># of NFTs (exact match)</a></li>\n</ul>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  displayProgressSpinnerInBlock: boolean = false;\n  title: string = \"\";\n  constructor() { }\n}\n","<div class=\"center\">\n    <h1>Wallets containing nfts with exact collection name</h1>\n    <form class=\"flex-column align-center\">\n        <input type=\"text\" #todo\n                 placeholder=\"Pick one\"\n                 aria-label=\"Number\"\n                 matInput\n                 [formControl]=\"myControl\"\n                 [matAutocomplete]=\"auto\"\n                 (keyup)=\"onKeyUp($event)\">\n          <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\" (optionSelected)=\"changeSelectedOption($event)\">\n            <mat-optgroup *ngFor=\"let option of options | async\">\n                <mat-option [value]=\"option\"><strong>{{option.contract_name}}</strong></mat-option>\n                <mat-option [value]=\"option\">{{option.contract_address}}</mat-option>\n            </mat-optgroup>\n          </mat-autocomplete>\n    </form>\n\n    <button [disabled]=\"isDisabled\" class=\"primary-btn\" (click)=\"SendRequest(todo.value, 1)\">Submit</button> \n    <div class=\"result\" *ngIf=\"records && records.length > 0\">Results</div>\n\n    <div class=\"result-wrapper flex justify-center\" infiniteScroll\n    [infiniteScrollDistance]=\"2\"\n    [infiniteScrollThrottle]=\"50\"\n    [scrollWindow]=\"true\"\n    [infiniteScrollContainer]=\"'.result-inner'\"\n    [fromRoot]=\"false\"\n    (scrolled)=\"onScroll('')\">\n        <div class=\"result-inner\">\n            <div class=\"row flex space-between\" *ngIf=\"records && records.length > 0\">\n                <div class=\"col head\">Collection Name</div>\n                <div class=\"col head\">View Provider Page</div>\n                <div class=\"col head\">Wallet Address</div>\n            </div>\n            <div class=\"row flex space-between\" *ngFor=\"let record of records;\">\n                <div class=\"col flex align-center no-wrap\">{{record.collection_name}}</div>\n                <div class=\"col flex align-center\"><img src=\"../../assets/images/nft-count-old.png\" alt=\"Logo\" /><a href=\"https://opensea.io/assets/ethereum/{{record.contract_address}}/{{record.token_id}}\" target=\"_blank\" style=\"cursor: pointer;\">{{record.token_id}}</a></div>\n                <div class=\"col flex align-center no-wrap\"><img src=\"../../assets/images/wallet.png\" alt=\"Logo\" /> <a target=\"_blank\" href=\"https://etherscan.io/nft/{{record.contract_address}}/{{record.token_id}}\"  style=\"cursor: pointer;\">{{record.owner_address}}</a></div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { debounce } from 'lodash';\nimport { pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatAutocomplete } from '@angular/material/autocomplete';\nimport { LoaderService } from '../loader.service';\nimport { eventNames } from 'process';\n\n@Component({\n  selector: 'app-collection-name-search',\n  templateUrl: './collection-name-search.component.html',\n  styleUrls: ['./collection-name-search.component.scss']\n})\nexport class CollectionNameSearchComponent implements OnInit {\n  @ViewChild(MatAutocomplete) matAutocomplete: MatAutocomplete;\n  baseUrl: string = 'http://52.22.129.105:9001';\n  selectedValue: string = '';\n  selectedOptionValue: string;\n  next: number = 0;\n  previous: number = 0;\n  isDisabled: boolean = true;\n  records = [];\n\n  constructor(private http: HttpClient, private loader: LoaderService) { }\n\n  myControl = new FormControl('');\n  options: Observable<any>;\n\n  ngOnInit() {\n    this.InitialValues('');\n  }\n\n  @Debounce(500)\n  onKeyUp(event: any) {\n    this.isDisabled = true;\n    const value = event.target.value;\n    this.selectedValue = value;\n    this.InitialValues(value);\n  }\n\n  @HostListener('document:click', ['$event'])\n  clickout(event) {\n    if (this.selectedValue === '') { } else {\n      this.matAutocomplete.options?.first?.select();\n    }\n  }\n\n  onScroll(value){\n    this.SendRequest(value, this.next);\n  }\n\n  InitialValues(value: string){\n    this.options = this.getInitialSearchValues(value).pipe(map(item => item.results));\n  }\n\n  displayFn(option?: any): string | undefined {\n    return option ? option.contract_name : undefined;\n  }\n\n  changeSelectedOption(event: any) {\n    this.isDisabled = false;\n    this.selectedOptionValue = event.option.value.contract_address;\n  }\n\n  SendRequest(value: string, page: number) {\n    console.log(value);\n    console.log(this.selectedValue);\n\n    this.loader.displayProgressSpinnerInBlock = true;\n    if(page <= 1) \n      this.records = [];\n    \n    this.next = 0;\n    this.previous = 0;\n    this.getWalletAddressesForExactCollectionSearch(this.selectedOptionValue, page).subscribe(response => {\n      response.results.forEach(element => {\n        this.records.push(element);\n      });\n      if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n        this.next = response.next.page;\n      }\n      if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n        this.previous = response.previous.page;\n      }\n      this.loader.displayProgressSpinnerInBlock = false;\n    });\n  }\n\n  public getWalletAddressesForExactCollectionSearch(value: string, page: number): Observable<any> {\n    const url = this.baseUrl + '/nfts/collection/search?p=' + value + '&limit=50' + (page > 0 ? '&page=' + page : '');\n    return this.http.get<any>(url);\n  }\n\n  public getInitialSearchValues(value: string): Observable<any> {\n    const url = this.baseUrl + '/general/collection/search?text=' + value;\n    return this.http.get<any>(url);\n  }\n\n}\n\nfunction Debounce(ms) {\n  return function(target: any, key: any, descriptor: any) {\n    const oldFunc = descriptor.value\n    const newFunc = debounce(oldFunc, ms)\n    descriptor.value = function() {\n        return newFunc.apply(this, arguments)\n    }\n  }\n}\n","import { Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { Options } from '@angular-slider/ngx-slider';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { MatInputModule } from '@angular/material/input';\nimport { LoaderService } from '../loader.service';\n\n@Component({\n  selector: 'app-balance-range-content',\n  templateUrl: './balance-range-content.component.html',\n  styleUrls: ['./balance-range-content.component.scss']\n})\nexport class BalanceRangeContentComponent implements OnInit {\n  @ViewChild('minInput', {static: true}) minInputElement: ElementRef;\n  @ViewChild('maxInput', {static: true}) maxInputElement: ElementRef;\n  baseUrl: string = 'http://52.22.129.105:9001'; //'http://107.22.58.206:9000';\n  next: number = 0;\n  previous: number = 0;\n\n  minValue: number = 2;\n  maxValue: number = 8;\n  options: Options = {\n    floor: 0,\n    ceil: 100000,\n  };\n\n  records = [];\n\n  constructor(private http: HttpClient, private loader: LoaderService, minInputElement: ElementRef, maxInputElement: ElementRef) {\n    this.minInputElement = minInputElement;\n    this.maxInputElement = maxInputElement;\n  }\n\n  ngOnInit(): void {  }\n\n  onScroll(){\n    this.SendRequest(this.next);\n  }\n\n  // changeMinValue(event) {\n  //   const val = this.minValue;\n  //   if(Number(event.target.value) < this.maxValue) {\n  //     this.minValue = Number(event.target.value);\n  //   } else {\n  //     //event.target.value = '';\n  //     this.minValue = this.maxValue;\n  //     this.maxValue = event.target.value;\n  //     event.preventDefault(); \n  //     event.stopPropagation();\n  //     return false;\n  //   }\n  // }\n\n  // changeMaxValue(event) {\n  //   const val = this.minValue; \n  //   if(Number(event.target.value) > this.minValue) {\n  //     this.maxValue = Number(event.target.value);\n  //   } else {\n  //     //event.target.value = '';\n  //     this.maxValue = val;\n  //     this.minValue = event.target.value;\n  //     event.preventDefault();\n  //     event.stopPropagation();\n  //     return false;\n  //   }\n  // }\n\n  SendRequest(page: number) {\n    this.next = 0;\n    this.previous = 0;\n    if(page <= 1)\n      this.records = [];\n    \n    if (Number(this.minInputElement.nativeElement.value) <= Number(this.maxInputElement.nativeElement.value)) {\n      this.loader.displayProgressSpinnerInBlock = true;\n      this.minValue = Number(this.minInputElement.nativeElement.value);\n      this.maxValue = Number(this.maxInputElement.nativeElement.value);\n      console.log(this.minValue);\n      console.log(this.maxValue);\n      let symbol = localStorage.getItem('symbol');\n      this.getWalletAddressesForXPriceRange(this.minValue, this.maxValue, page).subscribe(response => {\n        this.records = response.results;\n        if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n          this.next = response.next.page;\n        }\n        if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n          this.previous = response.previous.page;\n        }\n        this.loader.displayProgressSpinnerInBlock = false;\n      });\n    }\n    else {\n      alert('minimum value should be lesser than maximum value');\n      return false;\n    }\n  }\n\n  public getWalletAddressesForXPriceRange(\n    value: number,\n    maxValue: number,\n    page: number\n  ): Observable<any> {\n    const url =\n      this.baseUrl +\n      \"/wallet/address?gte=\" +\n      value +\n      \"&lte=\" +\n      maxValue +\n      \"&limit=50\" +\n      (page > 0 ? \"&page=\" + page : \"\");\n    console.log(url);\n    return this.http.get<any>(url);\n  }\n\n}\n","<div class=\"center\">\n    <h1>Total Ether Value (Range)</h1>\n    <form class=\"flex column align-center\" #myForm>\n        <div class=\"custom-slider\">\n            <ngx-slider [(value)]=\"minValue\" [(highValue)]=\"maxValue\" [options]=\"options\" ></ngx-slider>\n        </div>\n        <div class=\"min-max-inputs\">\n            <input matInput placeholder=\"Min\" name=\"minInput\" [ngModel]=\"minValue\" #minInput />\n            <input matInput placeholder=\"Max\" name=\"maxInput\" [ngModel]=\"maxValue\" #maxInput />\n        </div>          \n        <button class=\"primary-btn\" (click)=\"SendRequest(1)\">Submit</button>\n    </form>\n\n    <div class=\"result\" *ngIf=\"records && records.length > 0\">Results</div>\n\n    <div class=\"result-wrapper flex justify-center\" infiniteScroll\n    [infiniteScrollDistance]=\"2\"\n    [infiniteScrollThrottle]=\"50\"\n    [scrollWindow]=\"true\"\n    [infiniteScrollContainer]=\"'.result-inner'\"\n    [fromRoot]=\"false\"\n    (scrolled)=\"onScroll()\">\n        <div class=\"result-inner\">\n            <div class=\"row flex space-between\" *ngIf=\"records && records.length > 0\">\n                <div class=\"col head\">Wallet Address</div>\n                <div class=\"col head\">Balance</div>\n            </div>\n            <div class=\"row flex space-between\" *ngFor=\"let record of records;\">\n                <div class=\"col flex align-center no-wrap\"><img src=\"../../assets/images/wallet.png\" alt=\"Logo\" /> <a target=\"_blank\" href=\"https://etherscan.io/address/{{record.address}}\"  style=\"cursor: pointer;\">{{record.address}}</a></div>\n                <div class=\"col flex align-center\"><img src=\"../../assets/images/balance.svg\" alt=\"Logo\" class=\"count\" /> {{record.balance}}</div>\n            </div>\n        </div>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LoaderService } from '../loader.service';\n\n@Component({\n  selector: 'app-by-nft-count-content',\n  templateUrl: './by-nft-count-content.component.html',\n  styleUrls: ['./by-nft-count-content.component.scss']\n})\nexport class ByNftCountContentComponent implements OnInit {\n\n  baseUrl: string = 'http://52.22.129.105:9001'; //'http://107.22.58.206:9000';\n  selectedSymbol: string = 'gt';\n  next: number = 0;\n  previous: number = 0;\n\n  records = [];\n\n  constructor(private http: HttpClient, public dialog: MatDialog, public loader: LoaderService) { }\n\n  ngOnInit(): void { }\n\n  openDialog(address: string) {\n    this.dialog.open(DialogComponent, {\n      data: {\n        address: address\n      },\n      height: '750px',\n      width: '850px'\n    });\n  }\n\n  onScroll(value){\n    this.SendRequest(value, this.next);\n  }\n\n  SendRequest(value: string, page: number) {\n    this.next = 0;\n    this.previous = 0;\n    this.loader.displayProgressSpinnerInBlock = true;\n    let nftSymbol = localStorage.getItem('nftSymbol');\n    if(page <= 1)\n      this.records = [];\n    \n    this.getWalletAddressesForXNFTCount(value, page, nftSymbol).subscribe(response => {\n      response.results.forEach(element => {\n        this.records.push(element);\n      });\n      if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n        this.next = response.next.page;\n      }\n      if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n        this.previous = response.previous.page;\n      }\n      this.loader.displayProgressSpinnerInBlock = false;\n    });\n  }\n\n  public getWalletAddressesForXNFTCount(value: string, page: number, nftSymbol: string): Observable<any> {\n    const url = this.baseUrl + '/nfts/address?count=' + value + '&symbol=' + nftSymbol + '&limit=50' + (page > 0 ? '&page=' + page : '');\n    console.log(url);\n    return this.http.get<any>(url);\n  }\n}\n","<div class=\"center\">\n    <h1>Wallets containing {{this.loader.title}} X NFTs</h1>\n    <form class=\"flex column align-center\">\n        <input matInput #todo placeholder=\"Input Values\" name=\"todo\">   \n        <button class=\"primary-btn\" (click)=\"SendRequest(todo.value, 1)\" style=\"cursor: pointer;\">Submit</button>\n    </form>\n\n    <div class=\"result\" *ngIf=\"records && records.length > 0\">Results</div>\n\n    <div class=\"result-wrapper flex justify-center\" infiniteScroll\n    [infiniteScrollDistance]=\"2\"\n    [infiniteScrollThrottle]=\"50\"\n    [scrollWindow]=\"true\"\n    [infiniteScrollContainer]=\"'.result-inner'\"\n    [fromRoot]=\"false\"\n    (scrolled)=\"onScroll(todo.value)\">\n        <div class=\"result-inner\">\n            <div class=\"row flex space-between\" *ngIf=\"records && records.length > 0\">\n                <div class=\"col head\">Wallet Address</div>\n                <div class=\"col head\">NFT Count</div>\n                <div class=\"col head\">&nbsp;</div>\n            </div>\n            <div class=\"row flex space-between\" *ngFor=\"let record of records;\">\n                <div class=\"col flex align-center no-wrap\"><img src=\"../../assets/images/wallet.png\" alt=\"Logo\" /> <a target=\"_blank\" href=\"https://etherscan.io/address/{{record.owner_address}}\"  style=\"cursor: pointer;\">{{record.owner_address}}</a></div>\n                <div class=\"col flex align-center\"><img src=\"../../assets/images/balance.svg\" alt=\"Logo\" class=\"count\" /> {{record.count_id}}</div>\n                <div class=\"col flex align-center\"><button mat-raised-button color=\"success\" (click)=\"openDialog(record.owner_address)\" style=\"cursor: pointer;\">Show List</button></div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, ChangeDetectorRef } from '@angular/core';\nimport { LoaderService } from './loader.service';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n\n  mode = 'indeterminate';\n  value = 50;\n  color = 'primary';\n\n  constructor(public loader: LoaderService) { }\n\n  ngOnInit(){\n    this.loader.displayProgressSpinnerInBlock = false;\n  }\n}\n\n","<header><app-header class=\"container flex space-between align-center\"></app-header></header>\n<div class=\"main-wrapper flex space-between\">\n  <aside>\n    <app-sidebar></app-sidebar>\n  </aside>\n  <div class=\"content-wrapper\">\n    <router-outlet></router-outlet>\n    <app-footer></app-footer>\n  </div>\n</div>\n<mat-progress-spinner class=\"spiner\" *ngIf=\"this.loader.displayProgressSpinnerInBlock\"\n[color]=\"color\"\n[mode]=\"mode\"\n[value]=\"value\">\n</mat-progress-spinner>\n<div id=\"overlay\" *ngIf=\"this.loader.displayProgressSpinnerInBlock\"></div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatSelectModule } from '@angular/material/select';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { ContentComponent } from './content/content.component';\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { RangeContentComponent } from './range-content/range-content.component';\nimport {MatSliderModule} from '@angular/material/slider';\nimport { NgxSliderModule } from '@angular-slider/ngx-slider';\nimport { ByNftCountContentComponent } from './by-nft-count-content/by-nft-count-content.component';\nimport { TokenNameSearchComponent } from './token-name-search/token-name-search.component';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport { CollectionNameSearchComponent } from './collection-name-search/collection-name-search.component';\nimport { BalanceRangeContentComponent } from './balance-range-content/balance-range-content.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DialogComponent,\n    HeaderComponent,\n    FooterComponent,\n    SidebarComponent,\n    ContentComponent,\n    RangeContentComponent,\n    ByNftCountContentComponent,\n    TokenNameSearchComponent,\n    CollectionNameSearchComponent,\n    BalanceRangeContentComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InfiniteScrollModule,\n    MatSelectModule,\n    MatTableModule,\n    MatInputModule,\n    MatButtonModule,\n    HttpClientModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatSliderModule,\n    NgxSliderModule,\n    MatAutocompleteModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [DialogComponent]\n})\nexport class AppModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent implements OnInit {\n  baseUrl: string = 'http://52.22.129.105:9001'; //'http://107.22.58.206:9000';\n  next: number = 0;\n  previous: number = 0;\n  displayedColumns11 = ['name', 'collection_name'];\n\n  dataSource11 = new MatTableDataSource<any>([{ name: '', collection_name: '', contract_address: '', token_id: ''}]);\n\n  constructor(private http: HttpClient, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n    this.getNFTNames(this.data.address, 0).subscribe(response => {\n      this.dataSource11 = new MatTableDataSource<any>(response.results);\n      if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n        this.next = response.next.page;\n      }\n      if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n        this.previous = response.previous.page;\n      }\n    });\n  }\n\n  public fetchNFTNames(page: number) {\n    this.next = 0;\n    this.previous = 0;\n    this.getNFTNames(this.data.address, page).subscribe(response => {\n      this.dataSource11 = new MatTableDataSource<any>(response.results);\n      if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n        this.next = response.next.page;\n      }\n      if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n        this.previous = response.previous.page;\n      }\n    });\n  }\n\n  public getNFTNames(value: string, page: number): Observable<any> {\n    const url = this.baseUrl + '/nfts/address/name?address=' + value + (page > 0 ? '&page=' + page : '');\n    console.log(url);\n    return this.http.get<any>(url);\n  } \n}\n","<h1 mat-dialog-title>NFTs</h1>\n<div mat-dialog-content>\n  <table mat-table [dataSource]=\"dataSource11\">\n    <ng-container matColumnDef=\"name\">\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> <a class=\"nav-link\" href=\"https://opensea.io/assets/ethereum/{{element.contract_address}}/{{element.token_id}}\" target=\"_blank\" style=\"cursor: pointer;\">{{element.name}}</a> </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"collection_name\">\n      <mat-header-cell *matHeaderCellDef> Collection Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.collection_name}} </mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns11\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns11;\"></mat-row>\n  </table>\n</div>\n<div class=\"button-paginator\">\n    <button mat-raised-button color=\"success\" [ngStyle]=\"{ display: previous > 0 ? 'block': 'none' }\" (click)=\"fetchNFTNames(previous)\" style=\"cursor: pointer;\">Previous</button>\n    <button mat-raised-button color=\"success\" [ngStyle]=\"{ display: next > 0 ? 'block': 'none' }\" (click)=\"fetchNFTNames(next)\" style=\"cursor: pointer;\">Next</button>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  totalNfts: string = '0';\n  totalWallets: string = '0';\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    const url = 'http://52.22.129.105:9001/general/live';\n    this.http.get<any>(url).subscribe((response: any) => {\n      response.forEach(element => {\n        if(element.type === \"nfts\")\n          this.totalNfts = (Math.round(Number(element.count)) / 1000000).toFixed(2);\n        else if(element.type === \"wallets\")\n          this.totalWallets = (Math.round(Number(element.count)) / 1000000).toFixed(2);\n      });\n     });\n  }\n\n}\n","<div class=\"logo\"><a routerLink=\"/\"><img src=\"../../assets/images/logo.png\" alt=\"Logo\" /></a></div>\n<div class=\"live-feed\">\n    <h3>Total NFTs : <span>{{totalNfts}} M</span></h3>\n    <h3>Total Wallets : <span>{{totalWallets}} M</span></h3>\n</div>\n<div class=\"poweredby\">Powered by AXIOM</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>© Axiom Innovations LLC</footer>\n","<div class=\"center\">\n  <h1>Wallets containing nfts with exact name</h1>\n  <form class=\"flex-column align-center\">\n    <input\n      type=\"text\"\n      #todo\n      placeholder=\"Pick one\"\n      aria-label=\"Number\"\n      matInput\n      [formControl]=\"myControl\"\n      [matAutocomplete]=\"auto\"\n      (keyup)=\"onKeyUp($event)\"\n    />\n    <mat-autocomplete\n      #auto=\"matAutocomplete\"\n      [displayWith]=\"displayFn\"\n      (optionSelected)=\"changeSelectedOption($event)\"\n    >\n      <mat-optgroup *ngFor=\"let option of options | async\">\n        <mat-option [value]=\"option\"\n          ><strong>{{ option.name }}</strong></mat-option\n        >\n        <mat-option [value]=\"option\">{{ option.contract_address + ' ' + option.token_id }}</mat-option>\n      </mat-optgroup>\n    </mat-autocomplete>\n    <mat-spinner *ngIf=\"isLoading\" class=\"spinner internal-spinner\" diameter=\"20\"></mat-spinner> \n  </form>\n\n  <button [disabled]=\"isDisabled\"\n    class=\"primary-btn\"\n    (click)=\"SendRequest(todo.value, 1)\"\n    style=\"cursor: pointer\"\n  >\n    Submit\n  </button>\n  <div class=\"result\" *ngIf=\"records && records.length > 0\">Results</div>\n\n    <div class=\"result-wrapper flex justify-center\" infiniteScroll\n    [infiniteScrollDistance]=\"2\"\n    [infiniteScrollThrottle]=\"50\"\n    [scrollWindow]=\"true\"\n    [infiniteScrollContainer]=\"'.result-inner'\"\n    [fromRoot]=\"false\"\n    (scrolled)=\"onScroll('')\">\n        <div class=\"result-inner\">\n            <div class=\"row flex space-between\" *ngIf=\"records && records.length > 0\">\n                <div class=\"col head\">Collection Name</div>\n                <div class=\"col head\">View Provider Page</div>\n                <div class=\"col head\">Wallet Address</div>\n            </div>\n            <div class=\"row flex space-between\" *ngFor=\"let record of records;\">\n                <div class=\"col flex align-center no-wrap\">{{record.name}}</div>\n                <div class=\"col flex align-center\"><img src=\"../../assets/images/nft-count-old.png\" alt=\"Logo\" /><a href=\"https://opensea.io/assets/ethereum/{{record.contract_address}}/{{record.token_id}}\" target=\"_blank\" style=\"cursor: pointer;\">{{record.token_id}}</a></div>\n                <div class=\"col flex align-center no-wrap\"><img src=\"../../assets/images/wallet.png\" alt=\"Logo\" /> <a target=\"_blank\" href=\"https://etherscan.io/nft/{{record.contract_address}}/{{record.token_id}}\"  style=\"cursor: pointer;\">{{record.owner_address}}</a></div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport {map, startWith, tap} from 'rxjs/operators';\nimport { debounce } from 'lodash'\nimport { MatAutocomplete } from '@angular/material/autocomplete';\nimport { LoaderService } from '../loader.service';\n\n@Component({\n  selector: 'app-token-name-search',\n  templateUrl: './token-name-search.component.html',\n  styleUrls: ['./token-name-search.component.scss']\n})\nexport class TokenNameSearchComponent implements OnInit {\n  @ViewChild(MatAutocomplete) matAutocomplete: MatAutocomplete;\n  baseUrl: string = 'http://52.22.129.105:9001';\n  selectedValue: string = '';\n  selectedSymbol: string = 'gt';\n  selectedOptionValue: string;\n  selectedContractAddress: string;\n  next: number = 0;\n  previous: number = 0;\n  isLoading: boolean = false;\n  isDisabled: boolean = true;\n  records = [];\n\n  constructor(private http: HttpClient, private loader: LoaderService) { }\n\n  myControl = new FormControl('');\n  options: Observable<any>;\n\n  ngOnInit() {\n    this.InitialValues('Cryptopunks');\n  }\n\n  @HostListener('document:click', ['$event'])\n  clickout(event) {\n    if (this.selectedValue === '') { } else {\n      this.matAutocomplete.options?.first?.select();\n    }\n  }\n\n  @Debounce(500)\n  onKeyUp(event: any) {\n    this.isDisabled = true;\n    this.selectedValue = event.target.value;\n    this.InitialValues(this.selectedValue);\n  }\n\n  onScroll(value){\n    this.SendRequest(value, this.next);\n  }\n\n  InitialValues(value: string){\n    if (value == '') {\n      value = 'Cryptopunks';\n    }\n    this.isLoading = true;\n    this.options = this.getInitialSearchValues(value).pipe(map(item => item.results),tap(val => { this.isLoading = false;}));\n  }\n\n  displayFn(option?: any): string | undefined {\n    return option ? option.name : undefined;\n  }\n\n  changeSelectedOption(event: any) {\n    this.isDisabled = false;\n    this.selectedContractAddress = event.option.value.contract_address;\n    this.selectedOptionValue = event.option.value.token_id;\n  }\n\n  SendRequest(value: string, page: number) {\n    this.loader.displayProgressSpinnerInBlock = true;\n    if(page <= 1) this.records = [];\n    this.next = 0;\n    this.previous = 0;\n    \n    this.getWalletAddressesForExactNameSearch(this.selectedContractAddress, this.selectedOptionValue, page).subscribe(response => {\n      response.results.forEach(element => {\n        this.records.push(element);\n      });\n      if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n        this.next = response.next.page;\n      }\n      if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n        this.previous = response.previous.page;\n      }\n      this.loader.displayProgressSpinnerInBlock = false;\n    });\n  }\n\n  public getWalletAddressesForExactNameSearch(contract_address: string, token_id: string, page: number): Observable<any> {\n    const url = this.baseUrl + '/nfts/name/search?contract_address=' + contract_address + '&token_id=' + token_id + '&limit=50' + (page > 0 ? '&page=' + page : '');\n    console.log(url);\n    return this.http.get<any>(url);\n  }\n\n  public getInitialSearchValues(value: string): Observable<any> {\n    const url = this.baseUrl + '/general/token/search?text=' + value;\n    return this.http.get<any>(url);\n  }\n}\n\nfunction Debounce(ms) {\n  return function(target: any, key: any, descriptor: any) {\n    const oldFunc = descriptor.value\n    const newFunc = debounce(oldFunc, ms)\n    descriptor.value = function() {\n        return newFunc.apply(this, arguments)\n    }\n  }\n}","import { Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { Options } from '@angular-slider/ngx-slider';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { MatInputModule } from '@angular/material/input';\nimport { LoaderService } from '../loader.service';\n\n@Component({\n  selector: 'app-range-content',\n  templateUrl: './range-content.component.html',\n  styleUrls: ['./range-content.component.scss']\n})\nexport class RangeContentComponent implements OnInit {\n  @ViewChild('minInput', {static: true}) minInputElement: ElementRef;\n  @ViewChild('maxInput', {static: true}) maxInputElement: ElementRef;\n  baseUrl: string = 'http://52.22.129.105:9001'; //'http://107.22.58.206:9000';\n  next: number = 0;\n  previous: number = 0;\n\n  minValue: number = 2;\n  maxValue: number = 8;\n  options: Options = {\n    floor: 0,\n    ceil: 100000,\n  };\n\n  records = [];\n\n  constructor(private http: HttpClient, private loader: LoaderService, minInputElement: ElementRef, maxInputElement: ElementRef) {\n    this.minInputElement = minInputElement;\n    this.maxInputElement = maxInputElement;\n  }\n\n  ngOnInit(): void {  }\n\n  onScroll(){\n    this.SendRequest(this.next);\n  }\n\n  // changeMinValue(event) {\n  //   const val = this.minValue;\n  //   if(Number(event.target.value) < this.maxValue) {\n  //     this.minValue = Number(event.target.value);\n  //   } else {\n  //     //event.target.value = '';\n  //     this.minValue = this.maxValue;\n  //     this.maxValue = event.target.value;\n  //     event.preventDefault(); \n  //     event.stopPropagation();\n  //     return false;\n  //   }\n  // }\n\n  // changeMaxValue(event) {\n  //   const val = this.minValue; \n  //   if(Number(event.target.value) > this.minValue) {\n  //     this.maxValue = Number(event.target.value);\n  //   } else {\n  //     //event.target.value = '';\n  //     this.maxValue = val;\n  //     this.minValue = event.target.value;\n  //     event.preventDefault();\n  //     event.stopPropagation();\n  //     return false;\n  //   }\n  // }\n\n  SendRequest(page: number) {\n    this.next = 0;\n    this.previous = 0;\n    if(page <= 1)\n      this.records = [];\n    \n    if (Number(this.minInputElement.nativeElement.value) <= Number(this.maxInputElement.nativeElement.value)) {\n      this.loader.displayProgressSpinnerInBlock = true;\n      this.minValue = Number(this.minInputElement.nativeElement.value);\n      this.maxValue = Number(this.maxInputElement.nativeElement.value);\n      console.log(this.minValue);\n      console.log(this.maxValue);\n      let symbol = localStorage.getItem('symbol');\n      this.getWalletAddressesForPriceRange(this.minValue, this.maxValue, page).subscribe(response => {\n        this.records = response.results;\n        if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n          this.next = response.next.page;\n        }\n        if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n          this.previous = response.previous.page;\n        }\n        this.loader.displayProgressSpinnerInBlock = false;\n      });\n    }\n    else {\n      alert('minimum value should be lesser than maximum value');\n      return false;\n    }\n  }\n\n  public getWalletAddressesForPriceRange(min: number, max: number, page: number): Observable<any> {\n    const url = this.baseUrl + '/nfts/price?gte=' + min + '&lte=' + max + '&limit=50' + (page > 0 ? '&page=' + page : '');\n    return this.http.get<any>(url);\n  }\n\n\n}\n","<div class=\"center\">\n    <h1>NFT Price (Range)</h1>\n    <form class=\"flex column align-center\" #myForm>\n        <div class=\"custom-slider\">\n            <ngx-slider [(value)]=\"minValue\" [(highValue)]=\"maxValue\" [options]=\"options\" ></ngx-slider>\n        </div>\n        <div class=\"min-max-inputs\">\n            <input matInput placeholder=\"Min\" name=\"minInput\" [ngModel]=\"minValue\" #minInput />\n            <input matInput placeholder=\"Max\" name=\"maxInput\" [ngModel]=\"maxValue\" #maxInput />\n        </div>          \n        <button class=\"primary-btn\" (click)=\"SendRequest(1)\">Submit</button>\n    </form>\n\n    <div class=\"result\" *ngIf=\"records && records.length > 0\">Results</div>\n\n    <div class=\"result-wrapper flex justify-center\" infiniteScroll\n    [infiniteScrollDistance]=\"2\"\n    [infiniteScrollThrottle]=\"50\"\n    [scrollWindow]=\"true\"\n    [infiniteScrollContainer]=\"'.result-inner'\"\n    [fromRoot]=\"false\"\n    (scrolled)=\"onScroll()\">\n        <div class=\"result-inner\">\n            <div class=\"row flex space-between\" *ngIf=\"records && records.length > 0\">\n                <div class=\"col align-center head\">Wallet Address</div>\n                <div class=\"col align-center head\">View Provider Page</div>\n            </div>\n            <div class=\"row flex space-between\" *ngFor=\"let record of records;\">\n                <div class=\"col flex align-center no-wrap\"><img src=\"../../assets/images/wallet.png\" alt=\"Logo\" /> <a target=\"_blank\" href=\"https://etherscan.io/address/{{record.owner_address}}\"  style=\"cursor: pointer;\">{{record.owner_address}}</a></div>\n                <div class=\"col flex align-center\"><img src=\"../../assets/images/nft-count-old.png\" alt=\"Logo\" /><a href=\"https://opensea.io/assets/ethereum/{{record.contract_address}}/{{record.token_id}}\" target=\"_blank\" style=\"cursor: pointer;\">{{record.token_id}}</a></div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BalanceRangeContentComponent } from './balance-range-content/balance-range-content.component';\nimport { ByNftCountContentComponent } from './by-nft-count-content/by-nft-count-content.component';\nimport { CollectionNameSearchComponent } from './collection-name-search/collection-name-search.component';\nimport { ContentComponent } from './content/content.component';\nimport { RangeContentComponent } from './range-content/range-content.component';\nimport { TokenNameSearchComponent } from './token-name-search/token-name-search.component';\n\nconst routes: Routes = [\n  { path: 'name-search', component: TokenNameSearchComponent },\n  { path: '', component: ContentComponent },\n  { path: 'lt', component: ContentComponent },\n  { path: 'eq', component: ContentComponent },\n  { path: 'nft-gt', component: ByNftCountContentComponent },\n  { path: 'nft-lt', component: ByNftCountContentComponent },\n  { path: 'nft-eq', component: ByNftCountContentComponent },\n  { path: 'range', component: RangeContentComponent },\n  { path: 'collection-search', component: CollectionNameSearchComponent },\n  { path: 'bal-range', component: BalanceRangeContentComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}
{"version":3,"sources":["webpack:///src/app/content/content.component.ts","webpack:///src/app/content/content.component.html","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/sidebar/sidebar.component.html","webpack:///src/app/loader.service.ts","webpack:///src/app/collection-name-search/collection-name-search.component.html","webpack:///src/app/collection-name-search/collection-name-search.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/by-nft-count-content/by-nft-count-content.component.ts","webpack:///src/app/by-nft-count-content/by-nft-count-content.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dialog/dialog.component.ts","webpack:///src/app/dialog/dialog.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/token-name-search/token-name-search.component.html","webpack:///src/app/token-name-search/token-name-search.component.ts","webpack:///src/app/range-content/range-content.component.ts","webpack:///src/app/range-content/range-content.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ContentComponent","http","loader","baseUrl","selectedValue","selectedSymbol","next","previous","records","value","SendRequest","page","console","log","displayProgressSpinnerInBlock","symbol","localStorage","getItem","getWalletAddressesForXPrice","subscribe","response","results","forEach","element","push","url","get","onScroll","selector","templateUrl","styleUrls","SidebarComponent","mode","color","clear","setItem","title","toString","setSymbol","setRange","setNftSymbol","LoaderService","providedIn","CollectionNameSearchComponent","myControl","InitialValues","event","target","matAutocomplete","options","first","select","getInitialSearchValues","pipe","item","option","contract_name","undefined","selectedOptionValue","contract_address","getWalletAddressesForExactCollectionSearch","onKeyUp","changeSelectedOption","Debounce","clickout","ms","key","descriptor","oldFunc","newFunc","apply","arguments","environment","production","ByNftCountContentComponent","dialog","address","open","data","height","width","nftSymbol","getWalletAddressesForXNFTCount","AppComponent","AppModule","declarations","imports","providers","bootstrap","entryComponents","DialogComponent","displayedColumns11","dataSource11","name","collection_name","permalink","getNFTNames","fetchNFTNames","HeaderComponent","totalNfts","totalWallets","type","Math","round","Number","count","toFixed","FooterComponent","TokenNameSearchComponent","getWalletAddressesForExactNameSearch","RangeContentComponent","minValue","maxValue","floor","ceil","getWalletAddressesForPriceRange","min","max","routes","path","component","AppRoutingModule","forRoot","exports","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { LoaderService } from \"../loader.service\";\n\n@Component({\n  selector: \"app-content\",\n  templateUrl: \"./content.component.html\",\n  styleUrls: [\"./content.component.scss\"],\n})\nexport class ContentComponent implements OnInit {\n  baseUrl: string = 'http://52.22.129.105:9001'; //\"http://107.22.58.206:9000\";\n  selectedValue: any = \"0\";\n  selectedSymbol: string = \"gt\";\n  next: number = 0;\n  previous: number = 0;\n\n  records = [];\n\n  constructor(private http: HttpClient, public loader: LoaderService) {}\n\n  ngOnInit(): void {}\n\n  onScroll(value) {\n    this.SendRequest(value, this.next);\n  }\n\n  SendRequest(value: string, page: number) {\n    console.log(value);\n    console.log(this.selectedValue);\n    this.loader.displayProgressSpinnerInBlock = true;\n    this.next = 0;\n    this.previous = 0;\n    if(page <= 1)\n      this.records = [];\n      \n    let symbol = localStorage.getItem(\"symbol\");\n    this.getWalletAddressesForXPrice(value, symbol, page).subscribe(\n      (response) => {\n        response.results.forEach((element) => {\n          this.records.push(element);\n        });\n        if (\n          response.next &&\n          response.next.page &&\n          response.next.page !== \"\" &&\n          response.next.page !== 0\n        ) {\n          this.next = response.next.page;\n        }\n        if (\n          response.previous &&\n          response.previous.page &&\n          response.previous.page !== \"\" &&\n          response.previous.page !== 0\n        ) {\n          this.previous = response.previous.page;\n        }\n        this.loader.displayProgressSpinnerInBlock = false;\n      }\n    );\n  }\n\n  public getWalletAddressesForXPrice(\n    value: string,\n    symbol: string,\n    page: number\n  ): Observable<any> {\n    const url =\n      this.baseUrl +\n      \"/wallet/address?price=\" +\n      value +\n      \"&symbol=\" +\n      symbol +\n      \"&limit=50\" +\n      (page > 0 ? \"&page=\" + page : \"\");\n    console.log(url);\n    return this.http.get<any>(url);\n  }\n}\n","<div class=\"center\">\n    <h1>Wallets containing {{this.loader.title}} X Price</h1>\n    <form class=\"flex column align-center\">\n        <input matInput #todo placeholder=\"Input Values\" name=\"todo\">   \n        <button class=\"primary-btn\" style=\"cursor: pointer;\" (click)=\"SendRequest(todo.value, 1)\">Submit</button>\n    </form>\n\n    <div class=\"result\" *ngIf=\"records && records.length > 0\">Results</div>\n\n    <div class=\"result-wrapper flex justify-center\" infiniteScroll\n    [infiniteScrollDistance]=\"2\"\n    [infiniteScrollThrottle]=\"50\"\n    [scrollWindow]=\"true\"\n    [infiniteScrollContainer]=\"'.result-inner'\"\n    [fromRoot]=\"false\"\n    (scrolled)=\"onScroll(todo.value)\">\n        <div class=\"result-inner\">\n            <div class=\"row flex space-between\" *ngIf=\"records && records.length > 0\">\n                <div class=\"col head\">Wallet Address</div>\n                <div class=\"col head\">Balance</div>\n            </div>\n            <div class=\"row flex space-between\" *ngFor=\"let record of records;\">\n                <div class=\"col flex align-center no-wrap\"><img src=\"../../assets/images/wallet.png\" alt=\"Logo\" /> {{record.address}}</div>\n                <div class=\"col flex align-center\"><img src=\"../../assets/images/balance.svg\" alt=\"Logo\" class=\"count\" /> {{record.balance}}</div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LoaderService } from '../loader.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  mode = 'indeterminate';\n  value = 50;\n  color = 'primary';\n\n  constructor(public loader: LoaderService) { }\n\n  ngOnInit(): void {\n  }\n\n  setSymbol(value:string) {\n    localStorage.clear();\n    localStorage.setItem('symbol', value);\n    if(value === 'gt')\n      this.loader.title = \"more than\";\n    else if(value === 'lt')\n      this.loader.title = \"less than\";\n    else\n      this.loader.title = \"exactly\";\n  }\n\n  setRange(value: boolean) {\n    localStorage.clear();\n    localStorage.setItem('isRangeSlider', value.toString());\n  }\n\n  setNftSymbol(value:string) {\n    localStorage.clear();\n    localStorage.setItem('nftSymbol', value);\n    if(value === 'gt')\n      this.loader.title = \"more than\";\n    else if(value === 'lt')\n      this.loader.title = \"less than\";\n    else\n      this.loader.title = \"exactly\";\n  }\n}\n","<h3>Search BY</h3>\n\n<h3>Wallet</h3>\n\n<ul>\n    <li><a [routerLink]=\"['/']\" routerLinkActive=\"active\" (click)=\"setSymbol('gt');\" style=\"cursor: pointer;\">Value (greater than)</a></li>\n    <li><a [routerLink]=\"['/lt']\" routerLinkActive=\"active\" (click)=\"setSymbol('lt');\" style=\"cursor: pointer;\">Value (less than)</a></li>\n    <li><a [routerLink]=\"['/eq']\" routerLinkActive=\"active\" (click)=\"setSymbol('eq');\" style=\"cursor: pointer;\">Value (exact match)</a></li>\n    <li><a [routerLink]=\"['/range']\" routerLinkActive=\"active\" (click)=\"setRange(true);\" style=\"cursor: pointer;\">Value (range)</a></li>\n</ul>\n\n<h3>NFT</h3>\n\n<ul>\n    <li><a [routerLink]=\"['/name-search']\" routerLinkActive=\"active\" style=\"cursor: pointer;\">By Name</a></li>\n    <li><a [routerLink]=\"['/collection-search']\" routerLinkActive=\"active\" style=\"cursor: pointer;\">By Collection</a></li>\n    <li><a [routerLink]=\"['/nft-gt']\" routerLinkActive=\"active\" (click)=\"setNftSymbol('gt');\" style=\"cursor: pointer;\"># of NFTs (greater than)</a></li>\n    <li><a [routerLink]=\"['/nft-lt']\" routerLinkActive=\"active\" (click)=\"setNftSymbol('lt');\" style=\"cursor: pointer;\"># of NFTs (less than)</a></li>\n    <li><a [routerLink]=\"['/nft-eq']\" routerLinkActive=\"active\" (click)=\"setNftSymbol('eq');\" style=\"cursor: pointer;\"># of NFTs (exact match)</a></li>\n</ul>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  displayProgressSpinnerInBlock: boolean = false;\n  title: string = \"\";\n  constructor() { }\n}\n","<div class=\"center\">\n    <h1>Wallets containing nfts with exact collection name</h1>\n    <form class=\"flex-column align-center\">\n        <input type=\"text\" #todo\n                 placeholder=\"Pick one\"\n                 aria-label=\"Number\"\n                 matInput\n                 [formControl]=\"myControl\"\n                 [matAutocomplete]=\"auto\"\n                 (keyup)=\"onKeyUp($event)\">\n          <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\" (optionSelected)=\"changeSelectedOption($event)\">\n            <mat-optgroup *ngFor=\"let option of options | async\">\n                <mat-option [value]=\"option\"><strong>{{option.contract_name}}</strong></mat-option>\n                <mat-option [value]=\"option\">{{option.contract_address}}</mat-option>\n            </mat-optgroup>\n          </mat-autocomplete>\n    </form>\n\n    <button class=\"primary-btn\" (click)=\"SendRequest(todo.value, 1)\">Submit</button> \n    <div class=\"result\" *ngIf=\"records && records.length > 0\">Results</div>\n\n    <div class=\"result-wrapper flex justify-center\" infiniteScroll\n    [infiniteScrollDistance]=\"2\"\n    [infiniteScrollThrottle]=\"50\"\n    [scrollWindow]=\"true\"\n    [infiniteScrollContainer]=\"'.result-inner'\"\n    [fromRoot]=\"false\"\n    (scrolled)=\"onScroll('')\">\n        <div class=\"result-inner\">\n            <div class=\"row flex space-between\" *ngIf=\"records && records.length > 0\">\n                <div class=\"col head\">Collection Name</div>\n                <div class=\"col head\">View Provider Page</div>\n                <div class=\"col head\">Wallet Address</div>\n                <div class=\"col head\">View on Etherscan</div>\n            </div>\n            <div class=\"row flex space-between\" *ngFor=\"let record of records;\">\n                <div class=\"col flex align-center no-wrap\">{{record.collection_name}}</div>\n                <div class=\"col flex align-center\"><a href=\"{{record.permalink}}\" target=\"_blank\" style=\"cursor: pointer;\">View Provider Page</a></div>\n                <div class=\"col flex align-center no-wrap\"><img src=\"../../assets/images/wallet.png\" alt=\"Logo\" /> {{record.owner_address}}</div>\n                <div class=\"col flex align-center\"><a target=\"_blank\" href=\"https://etherscan.io/nft/{{record.contract_address}}/{{record.token_id}}\"  style=\"cursor: pointer;\">View on Etherscan</a></div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { debounce } from 'lodash';\nimport { pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatAutocomplete } from '@angular/material/autocomplete';\nimport { LoaderService } from '../loader.service';\nimport { eventNames } from 'process';\n\n@Component({\n  selector: 'app-collection-name-search',\n  templateUrl: './collection-name-search.component.html',\n  styleUrls: ['./collection-name-search.component.scss']\n})\nexport class CollectionNameSearchComponent implements OnInit {\n  @ViewChild(MatAutocomplete) matAutocomplete: MatAutocomplete;\n  baseUrl: string = 'http://52.22.129.105:9001';\n  selectedValue: string = '';\n  selectedOptionValue: string;\n  next: number = 0;\n  previous: number = 0;\n  records = [];\n\n  constructor(private http: HttpClient, private loader: LoaderService) { }\n\n  myControl = new FormControl('');\n  options: Observable<any>;\n\n  ngOnInit() {\n    this.InitialValues('');\n  }\n\n  @Debounce(500)\n  onKeyUp(event: any) {\n    const value = event.target.value;\n    this.selectedValue = value;\n    this.InitialValues(value);\n  }\n\n  @HostListener('document:click', ['$event'])\n  clickout(event) {\n    if (this.selectedValue === '') { } else {\n      this.matAutocomplete.options.first.select();\n    }\n  }\n\n  onScroll(value){\n    this.SendRequest(value, this.next);\n  }\n\n  InitialValues(value: string){\n    this.options = this.getInitialSearchValues(value).pipe(map(item => item.results));\n  }\n\n  displayFn(option?: any): string | undefined {\n    return option ? option.contract_name : undefined;\n  }\n\n  changeSelectedOption(event: any) {\n    this.selectedOptionValue = event.option.value.contract_address;\n  }\n\n  SendRequest(value: string, page: number) {\n    console.log(value);\n    console.log(this.selectedValue);\n\n    this.loader.displayProgressSpinnerInBlock = true;\n    if(page <= 1) \n      this.records = [];\n    \n    this.next = 0;\n    this.previous = 0;\n    this.getWalletAddressesForExactCollectionSearch(this.selectedOptionValue, page).subscribe(response => {\n      response.results.forEach(element => {\n        this.records.push(element);\n      });\n      if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n        this.next = response.next.page;\n      }\n      if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n        this.previous = response.previous.page;\n      }\n      this.loader.displayProgressSpinnerInBlock = false;\n    });\n  }\n\n  public getWalletAddressesForExactCollectionSearch(value: string, page: number): Observable<any> {\n    const url = this.baseUrl + '/nfts/collection/search?p=' + value + '&limit=50' + (page > 0 ? '&page=' + page : '');\n    return this.http.get<any>(url);\n  }\n\n  public getInitialSearchValues(value: string): Observable<any> {\n    const url = this.baseUrl + '/general/collection/search?text=' + value;\n    return this.http.get<any>(url);\n  }\n\n}\n\nfunction Debounce(ms) {\n  return function(target: any, key: any, descriptor: any) {\n    const oldFunc = descriptor.value\n    const newFunc = debounce(oldFunc, ms)\n    descriptor.value = function() {\n        return newFunc.apply(this, arguments)\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LoaderService } from '../loader.service';\n\n@Component({\n  selector: 'app-by-nft-count-content',\n  templateUrl: './by-nft-count-content.component.html',\n  styleUrls: ['./by-nft-count-content.component.scss']\n})\nexport class ByNftCountContentComponent implements OnInit {\n\n  baseUrl: string = 'http://52.22.129.105:9001'; //'http://107.22.58.206:9000';\n  selectedSymbol: string = 'gt';\n  next: number = 0;\n  previous: number = 0;\n\n  records = [];\n\n  constructor(private http: HttpClient, public dialog: MatDialog, public loader: LoaderService) { }\n\n  ngOnInit(): void { }\n\n  openDialog(address: string) {\n    this.dialog.open(DialogComponent, {\n      data: {\n        address: address\n      },\n      height: '750px',\n      width: '850px'\n    });\n  }\n\n  onScroll(value){\n    this.SendRequest(value, this.next);\n  }\n\n  SendRequest(value: string, page: number) {\n    this.next = 0;\n    this.previous = 0;\n    this.loader.displayProgressSpinnerInBlock = true;\n    let nftSymbol = localStorage.getItem('nftSymbol');\n    if(page <= 1)\n      this.records = [];\n    \n    this.getWalletAddressesForXNFTCount(value, page, nftSymbol).subscribe(response => {\n      response.results.forEach(element => {\n        this.records.push(element);\n      });\n      if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n        this.next = response.next.page;\n      }\n      if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n        this.previous = response.previous.page;\n      }\n      this.loader.displayProgressSpinnerInBlock = false;\n    });\n  }\n\n  public getWalletAddressesForXNFTCount(value: string, page: number, nftSymbol: string): Observable<any> {\n    const url = this.baseUrl + '/nfts/address?count=' + value + '&symbol=' + nftSymbol + '&limit=50' + (page > 0 ? '&page=' + page : '');\n    console.log(url);\n    return this.http.get<any>(url);\n  }\n}\n","<div class=\"center\">\n    <h1>Wallets containing {{this.loader.title}} X NFTs</h1>\n    <form class=\"flex column align-center\">\n        <input matInput #todo placeholder=\"Input Values\" name=\"todo\">   \n        <button class=\"primary-btn\" (click)=\"SendRequest(todo.value, 1)\" style=\"cursor: pointer;\">Submit</button>\n    </form>\n\n    <div class=\"result\" *ngIf=\"records && records.length > 0\">Results</div>\n\n    <div class=\"result-wrapper flex justify-center\" infiniteScroll\n    [infiniteScrollDistance]=\"2\"\n    [infiniteScrollThrottle]=\"50\"\n    [scrollWindow]=\"true\"\n    [infiniteScrollContainer]=\"'.result-inner'\"\n    [fromRoot]=\"false\"\n    (scrolled)=\"onScroll(todo.value)\">\n        <div class=\"result-inner\">\n            <div class=\"row flex space-between\" *ngIf=\"records && records.length > 0\">\n                <div class=\"col head\">Wallet Address</div>\n                <div class=\"col head\">NFT Count</div>\n                <div class=\"col head\">&nbsp;</div>\n            </div>\n            <div class=\"row flex space-between\" *ngFor=\"let record of records;\">\n                <div class=\"col flex align-center no-wrap\"><img src=\"../../assets/images/wallet.png\" alt=\"Logo\" /> {{record.owner_address}}</div>\n                <div class=\"col flex align-center\"><img src=\"../../assets/images/balance.svg\" alt=\"Logo\" class=\"count\" /> {{record.count_id}}</div>\n                <div class=\"col flex align-center\"><button mat-raised-button color=\"success\" (click)=\"openDialog(record.owner_address)\" style=\"cursor: pointer;\">View NFT</button></div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, ChangeDetectorRef } from '@angular/core';\nimport { LoaderService } from './loader.service';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n\n  mode = 'indeterminate';\n  value = 50;\n  color = 'primary';\n\n  constructor(public loader: LoaderService) { }\n\n  ngOnInit(){\n    this.loader.displayProgressSpinnerInBlock = false;\n  }\n}\n\n","<header><app-header class=\"container flex space-between align-center\"></app-header></header>\n<div class=\"main-wrapper flex space-between\">\n  <aside>\n    <app-sidebar></app-sidebar>\n  </aside>\n  <div class=\"content-wrapper\">\n    <router-outlet></router-outlet>\n    <app-footer></app-footer>\n  </div>\n</div>\n<mat-progress-spinner class=\"spiner\" *ngIf=\"this.loader.displayProgressSpinnerInBlock\"\n[color]=\"color\"\n[mode]=\"mode\"\n[value]=\"value\">\n</mat-progress-spinner>\n<div id=\"overlay\" *ngIf=\"this.loader.displayProgressSpinnerInBlock\"></div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatSelectModule } from '@angular/material/select';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { ContentComponent } from './content/content.component';\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { RangeContentComponent } from './range-content/range-content.component';\nimport {MatSliderModule} from '@angular/material/slider';\nimport { NgxSliderModule } from '@angular-slider/ngx-slider';\nimport { ByNftCountContentComponent } from './by-nft-count-content/by-nft-count-content.component';\nimport { TokenNameSearchComponent } from './token-name-search/token-name-search.component';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport { CollectionNameSearchComponent } from './collection-name-search/collection-name-search.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DialogComponent,\n    HeaderComponent,\n    FooterComponent,\n    SidebarComponent,\n    ContentComponent,\n    RangeContentComponent,\n    ByNftCountContentComponent,\n    TokenNameSearchComponent,\n    CollectionNameSearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InfiniteScrollModule,\n    MatSelectModule,\n    MatTableModule,\n    MatInputModule,\n    MatButtonModule,\n    HttpClientModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatSliderModule,\n    NgxSliderModule,\n    MatAutocompleteModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [DialogComponent]\n})\nexport class AppModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent implements OnInit {\n  baseUrl: string = 'http://52.22.129.105:9001'; //'http://107.22.58.206:9000';\n  next: number = 0;\n  previous: number = 0;\n  displayedColumns11 = ['name', 'collection_name', 'permalink'];\n\n  dataSource11 = new MatTableDataSource<any>([{ name: '', collection_name: '', permalink: ''}]);\n\n  constructor(private http: HttpClient, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n    this.getNFTNames(this.data.address, 0).subscribe(response => {\n      this.dataSource11 = new MatTableDataSource<any>(response.results);\n      if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n        this.next = response.next.page;\n      }\n      if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n        this.previous = response.previous.page;\n      }\n    });\n  }\n\n  public fetchNFTNames(page: number) {\n    this.next = 0;\n    this.previous = 0;\n    this.getNFTNames(this.data.address, page).subscribe(response => {\n      this.dataSource11 = new MatTableDataSource<any>(response.results);\n      if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n        this.next = response.next.page;\n      }\n      if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n        this.previous = response.previous.page;\n      }\n    });\n  }\n\n  public getNFTNames(value: string, page: number): Observable<any> {\n    const url = this.baseUrl + '/nfts/address/name?address=' + value + (page > 0 ? '&page=' + page : '');\n    console.log(url);\n    return this.http.get<any>(url);\n  } \n}\n","<h1 mat-dialog-title>NFTs</h1>\n<div mat-dialog-content>\n  <table mat-table [dataSource]=\"dataSource11\">\n    <ng-container matColumnDef=\"name\">\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"collection_name\">\n      <mat-header-cell *matHeaderCellDef> Collection Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.collection_name}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"permalink\">\n        <mat-header-cell *matHeaderCellDef> Provider Page Link </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> <a class=\"nav-link\" href=\"{{element.permalink}}\" target=\"_blank\" style=\"cursor: pointer;\">View on Provider Page</a> </mat-cell>\n      </ng-container>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns11\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns11;\"></mat-row>\n  </table>\n</div>\n<div class=\"button-paginator\">\n    <button mat-raised-button color=\"success\" [ngStyle]=\"{ display: previous > 0 ? 'block': 'none' }\" (click)=\"fetchNFTNames(previous)\" style=\"cursor: pointer;\">Previous</button>\n    <button mat-raised-button color=\"success\" [ngStyle]=\"{ display: next > 0 ? 'block': 'none' }\" (click)=\"fetchNFTNames(next)\" style=\"cursor: pointer;\">Next</button>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  totalNfts: string = '0';\n  totalWallets: string = '0';\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    const url = 'http://52.22.129.105:9001/general/live';\n    this.http.get<any>(url).subscribe((response: any) => {\n      response.forEach(element => {\n        if(element.type === \"nfts\")\n          this.totalNfts = (Math.round(Number(element.count)) / 1000000).toFixed(2);\n        else if(element.type === \"wallets\")\n          this.totalWallets = (Math.round(Number(element.count)) / 1000000).toFixed(2);\n      });\n     });\n  }\n\n}\n","<div class=\"logo\"><a routerLink=\"/\"><img src=\"../../assets/images/logo.png\" alt=\"Logo\" /></a></div>\n<div class=\"live-feed\">\n    <h3>Total NFTs : <span>{{totalNfts}} M</span></h3>\n    <h3>Total Wallets : <span>{{totalWallets}} M</span></h3>\n</div>\n<div class=\"poweredby\">Powered by AXIOM</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>Copyright Kellton Tech</footer>\n","<div class=\"center\">\n  <h1>Wallets containing nfts with exact name</h1>\n  <form class=\"flex-column align-center\">\n    <input\n      type=\"text\"\n      #todo\n      placeholder=\"Pick one\"\n      aria-label=\"Number\"\n      matInput\n      [formControl]=\"myControl\"\n      [matAutocomplete]=\"auto\"\n      (keyup)=\"onKeyUp($event)\"\n    />\n    <mat-autocomplete\n      #auto=\"matAutocomplete\"\n      [displayWith]=\"displayFn\"\n      (optionSelected)=\"changeSelectedOption($event)\"\n    >\n      <mat-optgroup *ngFor=\"let option of options | async\">\n        <mat-option [value]=\"option\"\n          ><strong>{{ option.contract_name }}</strong></mat-option\n        >\n        <mat-option [value]=\"option\">{{ option.contract_address }}</mat-option>\n      </mat-optgroup>\n    </mat-autocomplete>\n  </form>\n\n  <button\n    class=\"primary-btn\"\n    (click)=\"SendRequest(todo.value, 1)\"\n    style=\"cursor: pointer\"\n  >\n    Submit\n  </button>\n  <div class=\"result\" *ngIf=\"records && records.length > 0\">Results</div>\n\n  <div\n    class=\"result-wrapper flex justify-center\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"2\"\n    [infiniteScrollThrottle]=\"50\"\n    [scrollWindow]=\"true\"\n    [infiniteScrollContainer]=\"'.result-inner'\"\n    [fromRoot]=\"false\"\n    (scrolled)=\"onScroll('')\"\n  >\n    <div class=\"result-inner\">\n      <div class=\"row flex space-between\" *ngIf=\"records && records.length > 0\">\n        <div class=\"col head\">Name</div>\n        <div class=\"col head\">View Provider Page</div>\n        <div class=\"col head\">Wallet Address</div>\n        <div class=\"col head\">View on Etherscan</div>\n      </div>\n      <div class=\"row flex space-between\" *ngFor=\"let record of records\">\n        <div class=\"col flex align-center no-wrap\">{{ record.name }}</div>\n        <div class=\"col flex align-center\">\n          <a\n            href=\"{{ record.permalink }}\"\n            target=\"_blank\"\n            style=\"cursor: pointer\"\n            >View Provider Page</a\n          >\n        </div>\n        <div class=\"col flex align-center no-wrap\">\n          <img src=\"../../assets/images/wallet.png\" alt=\"Logo\" />\n          {{ record.owner_address }}\n        </div>\n        <div class=\"col flex align-center\">\n          <a\n            target=\"_blank\"\n            href=\"https://etherscan.io/nft/{{ record.contract_address }}/{{\n              record.token_id\n            }}\"\n            style=\"cursor: pointer\"\n            >View on Etherscan</a\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport {map, startWith} from 'rxjs/operators';\nimport { debounce } from 'lodash'\nimport { MatAutocomplete } from '@angular/material/autocomplete';\nimport { LoaderService } from '../loader.service';\n\n@Component({\n  selector: 'app-token-name-search',\n  templateUrl: './token-name-search.component.html',\n  styleUrls: ['./token-name-search.component.scss']\n})\nexport class TokenNameSearchComponent implements OnInit {\n  @ViewChild(MatAutocomplete) matAutocomplete: MatAutocomplete;\n  baseUrl: string = 'http://52.22.129.105:9001';\n  selectedValue: string = '';\n  selectedSymbol: string = 'gt';\n  selectedOptionValue: string;\n  next: number = 0;\n  previous: number = 0;\n\n  records = [];\n\n  constructor(private http: HttpClient, private loader: LoaderService) { }\n\n  myControl = new FormControl('');\n  options: Observable<any>;\n\n  ngOnInit() {\n    this.InitialValues('');\n  }\n\n  @HostListener('document:click', ['$event'])\n  clickout(event) {\n    if (this.selectedValue === '') { } else {\n      this.matAutocomplete.options?.first?.select();\n    }\n  }\n\n  @Debounce(500)\n  onKeyUp(event: any) {\n    this.selectedValue = event.target.value;\n    this.InitialValues(this.selectedValue);\n  }\n\n  onScroll(value){\n    this.SendRequest(value, this.next);\n  }\n\n  InitialValues(value: string){\n    this.options = this.getInitialSearchValues(value).pipe(map(item => item.results));\n  }\n\n  displayFn(option?: any): string | undefined {\n    return option ? option.contract_name : undefined;\n  }\n\n  changeSelectedOption(event: any) {\n    this.selectedOptionValue = event.option.value.contract_address;\n  }\n\n  SendRequest(value: string, page: number) {\n    console.log(value);\n    console.log(this.selectedValue);\n    this.loader.displayProgressSpinnerInBlock = true;\n    if(page <= 1) this.records = [];\n    this.next = 0;\n    this.previous = 0;\n    this.getWalletAddressesForExactNameSearch(value, page).subscribe(response => {\n      response.results.forEach(element => {\n        this.records.push(element);\n      });\n      if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n        this.next = response.next.page;\n      }\n      if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n        this.previous = response.previous.page;\n      }\n      this.loader.displayProgressSpinnerInBlock = false;\n    });\n  }\n\n  public getWalletAddressesForExactNameSearch(value: string, page: number): Observable<any> {\n    const url = this.baseUrl + '/nfts/name/search?p=' + value + '&limit=50' + (page > 0 ? '&page=' + page : '');\n    return this.http.get<any>(url);\n  }\n\n  public getInitialSearchValues(value: string): Observable<any> {\n    const url = this.baseUrl + '/general/token/search?text=' + value;\n    return this.http.get<any>(url);\n  }\n}\n\nfunction Debounce(ms) {\n  return function(target: any, key: any, descriptor: any) {\n    const oldFunc = descriptor.value\n    const newFunc = debounce(oldFunc, ms)\n    descriptor.value = function() {\n        return newFunc.apply(this, arguments)\n    }\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { Options } from '@angular-slider/ngx-slider';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { MatInputModule } from '@angular/material/input';\nimport { LoaderService } from '../loader.service';\n\n@Component({\n  selector: 'app-range-content',\n  templateUrl: './range-content.component.html',\n  styleUrls: ['./range-content.component.scss']\n})\nexport class RangeContentComponent implements OnInit {\n\n  baseUrl: string = 'http://52.22.129.105:9001'; //'http://107.22.58.206:9000';\n  next: number = 0;\n  previous: number = 0;\n\n  minValue: number = 2;\n  maxValue: number = 8;\n  options: Options = {\n    floor: 0,\n    ceil: 1000,\n  };\n\n  records = [];\n\n  constructor(private http: HttpClient, private loader: LoaderService) { }\n\n  ngOnInit(): void {  }\n\n  onScroll(){\n    this.SendRequest(this.next);\n  }\n\n  SendRequest(page: number) {\n    this.next = 0;\n    this.previous = 0;\n    this.loader.displayProgressSpinnerInBlock = true;\n    if(page <= 1)\n      this.records = [];\n    \n    let symbol = localStorage.getItem('symbol');\n    this.getWalletAddressesForPriceRange(this.minValue, this.maxValue, page).subscribe(response => {\n      this.records = response.results;\n      if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n        this.next = response.next.page;\n      }\n      if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n        this.previous = response.previous.page;\n      }\n      this.loader.displayProgressSpinnerInBlock = false;\n    });\n  }\n\n  public getWalletAddressesForPriceRange(min: number, max: number, page: number): Observable<any> {\n    const url = this.baseUrl + '/nfts/price?gte=' + min + '&lte=' + max + '&limit=50' + (page > 0 ? '&page=' + page : '');\n    return this.http.get<any>(url);\n  }\n\n\n}\n","<div class=\"center\">\n    <h1>Wallets containing nfts having more than X price</h1>\n    <form class=\"flex column align-center\">\n        <div class=\"custom-slider\">\n            <ngx-slider [(value)]=\"minValue\" [(highValue)]=\"maxValue\" [options]=\"options\" ></ngx-slider>\n        </div>\n        <div class=\"min-max-inputs\">\n            <input matInput placeholder=\"Min\" name=\"minInput\" [(ngModel)]=\"minValue\" />\n            <input matInput placeholder=\"Max\" name=\"maxInput\" [(ngModel)]=\"maxValue\" />\n        </div>          \n        <button class=\"primary-btn\" (click)=\"SendRequest(1)\">Submit</button>\n    </form>\n\n    <div class=\"result\" *ngIf=\"records && records.length > 0\">Results</div>\n\n    <div class=\"result-wrapper flex justify-center\" infiniteScroll\n    [infiniteScrollDistance]=\"2\"\n    [infiniteScrollThrottle]=\"50\"\n    [scrollWindow]=\"true\"\n    [infiniteScrollContainer]=\"'.result-inner'\"\n    [fromRoot]=\"false\"\n    (scrolled)=\"onScroll()\">\n        <div class=\"result-inner\">\n            <div class=\"row flex space-between\" *ngIf=\"records && records.length > 0\">\n                <div class=\"col align-center head\">Wallet Address</div>\n            </div>\n            <div class=\"row flex space-between\" *ngFor=\"let record of records;\">\n                <div class=\"col flex align-center no-wrap\"><img src=\"../../assets/images/wallet.png\" alt=\"Logo\" /> {{record.owner_address}}</div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ByNftCountContentComponent } from './by-nft-count-content/by-nft-count-content.component';\nimport { CollectionNameSearchComponent } from './collection-name-search/collection-name-search.component';\nimport { ContentComponent } from './content/content.component';\nimport { RangeContentComponent } from './range-content/range-content.component';\nimport { TokenNameSearchComponent } from './token-name-search/token-name-search.component';\n\nconst routes: Routes = [\n  { path: 'name-search', component: TokenNameSearchComponent },\n  { path: '', component: ContentComponent },\n  { path: 'lt', component: ContentComponent },\n  { path: 'eq', component: ContentComponent },\n  { path: 'nft-gt', component: ByNftCountContentComponent },\n  { path: 'nft-lt', component: ByNftCountContentComponent },\n  { path: 'nft-eq', component: ByNftCountContentComponent },\n  { path: 'range', component: RangeContentComponent },\n  { path: 'collection-search', component: CollectionNameSearchComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}
{"version":3,"sources":["./src/app/content/content.component.ts","./src/app/content/content.component.html","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","./src/app/loader.service.ts","./src/app/collection-name-search/collection-name-search.component.ts","./src/app/collection-name-search/collection-name-search.component.html","./src/environments/environment.ts","./src/app/by-nft-count-content/by-nft-count-content.component.ts","./src/app/by-nft-count-content/by-nft-count-content.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dialog/dialog.component.ts","./src/app/dialog/dialog.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/token-name-search/token-name-search.component.ts","./src/app/token-name-search/token-name-search.component.html","./src/app/range-content/range-content.component.ts","./src/app/range-content/range-content.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { LoaderService } from \"../loader.service\";\n\n@Component({\n  selector: \"app-content\",\n  templateUrl: \"./content.component.html\",\n  styleUrls: [\"./content.component.scss\"],\n})\nexport class ContentComponent implements OnInit {\n  baseUrl: string = 'http://52.22.129.105:9001'; //\"http://107.22.58.206:9000\";\n  selectedValue: any = \"0\";\n  selectedSymbol: string = \"gt\";\n  next: number = 0;\n  previous: number = 0;\n\n  records = [];\n\n  constructor(private http: HttpClient, private loader: LoaderService) {}\n\n  ngOnInit(): void {}\n\n  onScroll(value) {\n    this.SendRequest(value, this.next);\n  }\n\n  SendRequest(value: string, page: number) {\n    console.log(value);\n    console.log(this.selectedValue);\n    this.loader.displayProgressSpinnerInBlock = true;\n    this.next = 0;\n    this.previous = 0;\n    if(page <= 1)\n      this.records = [];\n      \n    let symbol = localStorage.getItem(\"symbol\");\n    this.getWalletAddressesForXPrice(value, symbol, page).subscribe(\n      (response) => {\n        response.results.forEach((element) => {\n          this.records.push(element);\n        });\n        if (\n          response.next &&\n          response.next.page &&\n          response.next.page !== \"\" &&\n          response.next.page !== 0\n        ) {\n          this.next = response.next.page;\n        }\n        if (\n          response.previous &&\n          response.previous.page &&\n          response.previous.page !== \"\" &&\n          response.previous.page !== 0\n        ) {\n          this.previous = response.previous.page;\n        }\n        this.loader.displayProgressSpinnerInBlock = false;\n      }\n    );\n  }\n\n  public getWalletAddressesForXPrice(\n    value: string,\n    symbol: string,\n    page: number\n  ): Observable<any> {\n    const url =\n      this.baseUrl +\n      \"/wallet/address?price=\" +\n      value +\n      \"&symbol=\" +\n      symbol +\n      \"&limit=50\" +\n      (page > 0 ? \"&page=\" + page : \"\");\n    console.log(url);\n    return this.http.get<any>(url);\n  }\n}\n","<div class=\"center\">\n    <h1>Wallets containing X Price</h1>\n    <form class=\"flex column align-center\">\n        <input matInput #todo placeholder=\"Input Values\" name=\"todo\">   \n        <button class=\"primary-btn\" style=\"cursor: pointer;\" (click)=\"SendRequest(todo.value, 1)\">Submit</button>\n    </form>\n\n    <div class=\"result\" *ngIf=\"records && records.length > 0\">Results</div>\n\n    <div class=\"result-wrapper flex justify-center\" infiniteScroll\n    [infiniteScrollDistance]=\"2\"\n    [infiniteScrollThrottle]=\"50\"\n    [scrollWindow]=\"true\"\n    [infiniteScrollContainer]=\"'.result-inner'\"\n    [fromRoot]=\"false\"\n    (scrolled)=\"onScroll(todo.value)\">\n        <div class=\"result-inner\">\n            <div class=\"row flex space-between\" *ngIf=\"records && records.length > 0\">\n                <div class=\"col head\">Wallet Address</div>\n                <div class=\"col head\">Balance</div>\n            </div>\n            <div class=\"row flex space-between\" *ngFor=\"let record of records;\">\n                <div class=\"col flex align-center no-wrap\"><img src=\"../../assets/images/wallet.png\" alt=\"Logo\" /> {{record.address}}</div>\n                <div class=\"col flex align-center\"><img src=\"../../assets/images/balance.svg\" alt=\"Logo\" class=\"count\" /> {{record.balance}}</div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LoaderService } from '../loader.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  mode = 'indeterminate';\n  value = 50;\n  color = 'primary';\n\n  constructor(public loader: LoaderService) { }\n\n  ngOnInit(): void {\n  }\n\n  setSymbol(value:string) {\n    localStorage.clear();\n    localStorage.setItem('symbol', value);\n  }\n\n  setRange(value: boolean) {\n    localStorage.clear();\n    localStorage.setItem('isRangeSlider', value.toString());\n  }\n\n  setNftSymbol(value:string) {\n    localStorage.clear();\n    localStorage.setItem('nftSymbol', value);\n  }\n}\n","<h3>Search BY</h3>\n\n<h3>Wallet</h3>\n\n<ul>\n    <li><a [routerLink]=\"['/']\" routerLinkActive=\"active\" (click)=\"setSymbol('gt');\" style=\"cursor: pointer;\">Value (greater than)</a></li>\n    <li><a [routerLink]=\"['/lt']\" routerLinkActive=\"active\" (click)=\"setSymbol('lt');\" style=\"cursor: pointer;\">Value (less than)</a></li>\n    <li><a [routerLink]=\"['/eq']\" routerLinkActive=\"active\" (click)=\"setSymbol('eq');\" style=\"cursor: pointer;\">Value (exact match)</a></li>\n    <li><a [routerLink]=\"['/range']\" routerLinkActive=\"active\" (click)=\"setRange(true);\" style=\"cursor: pointer;\">Value (range)</a></li>\n</ul>\n\n<h3>NFT</h3>\n\n<ul>\n    <li><a [routerLink]=\"['/name-search']\" routerLinkActive=\"active\" style=\"cursor: pointer;\">By Name</a></li>\n    <li><a [routerLink]=\"['/collection-search']\" routerLinkActive=\"active\" style=\"cursor: pointer;\">By Collection</a></li>\n    <li><a [routerLink]=\"['/nft-gt']\" routerLinkActive=\"active\" (click)=\"setNftSymbol('gt');\" style=\"cursor: pointer;\"># of NFTs (greater than)</a></li>\n    <li><a [routerLink]=\"['/nft-lt']\" routerLinkActive=\"active\" (click)=\"setNftSymbol('lt');\" style=\"cursor: pointer;\"># of NFTs (less than)</a></li>\n    <li><a [routerLink]=\"['/nft-eq']\" routerLinkActive=\"active\" (click)=\"setNftSymbol('eq');\" style=\"cursor: pointer;\"># of NFTs (exact match)</a></li>\n</ul>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  displayProgressSpinnerInBlock: boolean = false;\n  constructor() { }\n}\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { debounce } from 'lodash';\nimport { pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatAutocomplete } from '@angular/material/autocomplete';\nimport { LoaderService } from '../loader.service';\nimport { eventNames } from 'process';\n\n@Component({\n  selector: 'app-collection-name-search',\n  templateUrl: './collection-name-search.component.html',\n  styleUrls: ['./collection-name-search.component.scss']\n})\nexport class CollectionNameSearchComponent implements OnInit {\n  @ViewChild(MatAutocomplete) matAutocomplete: MatAutocomplete;\n  baseUrl: string = 'http://52.22.129.105:9001';\n  selectedValue: string = '';\n  selectedOptionValue: string;\n  next: number = 0;\n  previous: number = 0;\n  records = [];\n\n  constructor(private http: HttpClient, private loader: LoaderService) { }\n\n  myControl = new FormControl('');\n  options: Observable<any>;\n\n  ngOnInit() {\n    this.InitialValues('');\n  }\n\n  @Debounce(500)\n  onKeyUp(event: any) {\n    const value = event.target.value;\n    this.selectedValue = value;\n    this.InitialValues(value);\n  }\n\n  @HostListener('document:click', ['$event'])\n  clickout(event) {\n    if (this.selectedValue === '') { } else {\n      this.matAutocomplete.options.first.select();\n    }\n  }\n\n  onScroll(value){\n    this.SendRequest(value, this.next);\n  }\n\n  InitialValues(value: string){\n    this.options = this.getInitialSearchValues(value).pipe(map(item => item.results));\n  }\n\n  displayFn(option?: any): string | undefined {\n    return option ? option.contract_name : undefined;\n  }\n\n  changeSelectedOption(event: any) {\n    this.selectedOptionValue = event.option.value.contract_address;\n  }\n\n  SendRequest(value: string, page: number) {\n    console.log(value);\n    console.log(this.selectedValue);\n\n    this.loader.displayProgressSpinnerInBlock = true;\n    if(page <= 1) \n      this.records = [];\n    \n    this.next = 0;\n    this.previous = 0;\n    this.getWalletAddressesForExactCollectionSearch(this.selectedOptionValue, page).subscribe(response => {\n      response.results.forEach(element => {\n        this.records.push(element);\n      });\n      if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n        this.next = response.next.page;\n      }\n      if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n        this.previous = response.previous.page;\n      }\n      this.loader.displayProgressSpinnerInBlock = false;\n    });\n  }\n\n  public getWalletAddressesForExactCollectionSearch(value: string, page: number): Observable<any> {\n    const url = this.baseUrl + '/nfts/collection/search?p=' + value + '&limit=50' + (page > 0 ? '&page=' + page : '');\n    return this.http.get<any>(url);\n  }\n\n  public getInitialSearchValues(value: string): Observable<any> {\n    const url = this.baseUrl + '/general/collection/search?text=' + value;\n    return this.http.get<any>(url);\n  }\n\n}\n\nfunction Debounce(ms) {\n  return function(target: any, key: any, descriptor: any) {\n    const oldFunc = descriptor.value\n    const newFunc = debounce(oldFunc, ms)\n    descriptor.value = function() {\n        return newFunc.apply(this, arguments)\n    }\n  }\n}\n","<div class=\"center\">\n    <h1>Wallets containing nfts with exact collection name</h1>\n    <form class=\"flex-column align-center\">\n        <input type=\"text\" #todo\n                 placeholder=\"Pick one\"\n                 aria-label=\"Number\"\n                 matInput\n                 [formControl]=\"myControl\"\n                 [matAutocomplete]=\"auto\"\n                 (keyup)=\"onKeyUp($event)\">\n          <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\" (optionSelected)=\"changeSelectedOption($event)\">\n            <mat-optgroup *ngFor=\"let option of options | async\">\n                <mat-option [value]=\"option\"><strong>{{option.contract_name}}</strong></mat-option>\n                <mat-option [value]=\"option\">{{option.contract_address}}</mat-option>\n            </mat-optgroup>\n          </mat-autocomplete>\n    </form>\n\n    <button class=\"primary-btn\" (click)=\"SendRequest(todo.value, 1)\">Submit</button> \n    <div class=\"result\" *ngIf=\"records && records.length > 0\">Results</div>\n\n    <div class=\"result-wrapper flex justify-center\" infiniteScroll\n    [infiniteScrollDistance]=\"2\"\n    [infiniteScrollThrottle]=\"50\"\n    [scrollWindow]=\"true\"\n    [infiniteScrollContainer]=\"'.result-inner'\"\n    [fromRoot]=\"false\"\n    (scrolled)=\"onScroll('')\">\n        <div class=\"result-inner\">\n            <div class=\"row flex space-between\" *ngIf=\"records && records.length > 0\">\n                <div class=\"col head\">Collection Name</div>\n                <div class=\"col head\">View Provider Page</div>\n                <div class=\"col head\">Wallet Address</div>\n                <div class=\"col head\">View on Etherscan</div>\n            </div>\n            <div class=\"row flex space-between\" *ngFor=\"let record of records;\">\n                <div class=\"col flex align-center no-wrap\">{{record.collection_name}}</div>\n                <div class=\"col flex align-center\"><a href=\"{{record.permalink}}\" target=\"_blank\" style=\"cursor: pointer;\">View Provider Page</a></div>\n                <div class=\"col flex align-center no-wrap\"><img src=\"../../assets/images/wallet.png\" alt=\"Logo\" /> {{record.owner_address}}</div>\n                <div class=\"col flex align-center\"><a target=\"_blank\" href=\"https://etherscan.io/nft/{{record.contract_address}}/{{record.token_id}}\"  style=\"cursor: pointer;\">View on Etherscan</a></div>\n            </div>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LoaderService } from '../loader.service';\n\n@Component({\n  selector: 'app-by-nft-count-content',\n  templateUrl: './by-nft-count-content.component.html',\n  styleUrls: ['./by-nft-count-content.component.scss']\n})\nexport class ByNftCountContentComponent implements OnInit {\n\n  baseUrl: string = 'http://52.22.129.105:9001'; //'http://107.22.58.206:9000';\n  selectedSymbol: string = 'gt';\n  next: number = 0;\n  previous: number = 0;\n\n  records = [];\n\n  constructor(private http: HttpClient, public dialog: MatDialog, private loader: LoaderService) { }\n\n  ngOnInit(): void { }\n\n  openDialog(address: string) {\n    this.dialog.open(DialogComponent, {\n      data: {\n        address: address\n      },\n      height: '750px',\n      width: '850px'\n    });\n  }\n\n  onScroll(value){\n    this.SendRequest(value, this.next);\n  }\n\n  SendRequest(value: string, page: number) {\n    this.next = 0;\n    this.previous = 0;\n    this.loader.displayProgressSpinnerInBlock = true;\n    let nftSymbol = localStorage.getItem('nftSymbol');\n    if(page <= 1)\n      this.records = [];\n    \n    this.getWalletAddressesForXNFTCount(value, page, nftSymbol).subscribe(response => {\n      response.results.forEach(element => {\n        this.records.push(element);\n      });\n      if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n        this.next = response.next.page;\n      }\n      if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n        this.previous = response.previous.page;\n      }\n      this.loader.displayProgressSpinnerInBlock = false;\n    });\n  }\n\n  public getWalletAddressesForXNFTCount(value: string, page: number, nftSymbol: string): Observable<any> {\n    const url = this.baseUrl + '/nfts/address?count=' + value + '&symbol=' + nftSymbol + '&limit=50' + (page > 0 ? '&page=' + page : '');\n    console.log(url);\n    return this.http.get<any>(url);\n  }\n}\n","<div class=\"center\">\n    <h1>Wallets containing more than X NFTs</h1>\n    <form class=\"flex column align-center\">\n        <input matInput #todo placeholder=\"Input Values\" name=\"todo\">   \n        <button class=\"primary-btn\" (click)=\"SendRequest(todo.value, 1)\" style=\"cursor: pointer;\">Submit</button>\n    </form>\n\n    <div class=\"result\" *ngIf=\"records && records.length > 0\">Results</div>\n\n    <div class=\"result-wrapper flex justify-center\" infiniteScroll\n    [infiniteScrollDistance]=\"2\"\n    [infiniteScrollThrottle]=\"50\"\n    [scrollWindow]=\"true\"\n    [infiniteScrollContainer]=\"'.result-inner'\"\n    [fromRoot]=\"false\"\n    (scrolled)=\"onScroll(todo.value)\">\n        <div class=\"result-inner\">\n            <div class=\"row flex space-between\" *ngIf=\"records && records.length > 0\">\n                <div class=\"col head\">Wallet Address</div>\n                <div class=\"col head\">NFT Count</div>\n                <div class=\"col head\">&nbsp;</div>\n            </div>\n            <div class=\"row flex space-between\" *ngFor=\"let record of records;\">\n                <div class=\"col flex align-center no-wrap\"><img src=\"../../assets/images/wallet.png\" alt=\"Logo\" /> {{record.owner_address}}</div>\n                <div class=\"col flex align-center\"><img src=\"../../assets/images/balance.svg\" alt=\"Logo\" class=\"count\" /> {{record.count_id}}</div>\n                <div class=\"col flex align-center\"><button mat-raised-button color=\"success\" (click)=\"openDialog(record.owner_address)\" style=\"cursor: pointer;\">View NFT</button></div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, ChangeDetectorRef } from '@angular/core';\nimport { LoaderService } from './loader.service';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n\n  mode = 'indeterminate';\n  value = 50;\n  color = 'primary';\n\n  constructor(public loader: LoaderService) { }\n\n  ngOnInit(){\n    this.loader.displayProgressSpinnerInBlock = false;\n  }\n}\n\n","<header><app-header class=\"container flex space-between align-center\"></app-header></header>\n<div class=\"main-wrapper flex space-between\">\n  <aside>\n    <app-sidebar></app-sidebar>\n  </aside>\n  <div class=\"content-wrapper\">\n    <router-outlet></router-outlet>\n    <app-footer></app-footer>\n  </div>\n</div>\n<mat-progress-spinner class=\"spiner\" *ngIf=\"this.loader.displayProgressSpinnerInBlock\"\n[color]=\"color\"\n[mode]=\"mode\"\n[value]=\"value\">\n</mat-progress-spinner>\n<div id=\"overlay\" *ngIf=\"this.loader.displayProgressSpinnerInBlock\"></div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatSelectModule } from '@angular/material/select';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { ContentComponent } from './content/content.component';\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { RangeContentComponent } from './range-content/range-content.component';\nimport {MatSliderModule} from '@angular/material/slider';\nimport { NgxSliderModule } from '@angular-slider/ngx-slider';\nimport { ByNftCountContentComponent } from './by-nft-count-content/by-nft-count-content.component';\nimport { TokenNameSearchComponent } from './token-name-search/token-name-search.component';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport { CollectionNameSearchComponent } from './collection-name-search/collection-name-search.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DialogComponent,\n    HeaderComponent,\n    FooterComponent,\n    SidebarComponent,\n    ContentComponent,\n    RangeContentComponent,\n    ByNftCountContentComponent,\n    TokenNameSearchComponent,\n    CollectionNameSearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InfiniteScrollModule,\n    MatSelectModule,\n    MatTableModule,\n    MatInputModule,\n    MatButtonModule,\n    HttpClientModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatSliderModule,\n    NgxSliderModule,\n    MatAutocompleteModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [DialogComponent]\n})\nexport class AppModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent implements OnInit {\n  baseUrl: string = 'http://52.22.129.105:9001'; //'http://107.22.58.206:9000';\n  next: number = 0;\n  previous: number = 0;\n  displayedColumns11 = ['name', 'collection_name', 'permalink'];\n\n  dataSource11 = new MatTableDataSource<any>([{ name: '', collection_name: '', permalink: ''}]);\n\n  constructor(private http: HttpClient, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n    this.getNFTNames(this.data.address, 0).subscribe(response => {\n      this.dataSource11 = new MatTableDataSource<any>(response.results);\n      if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n        this.next = response.next.page;\n      }\n      if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n        this.previous = response.previous.page;\n      }\n    });\n  }\n\n  public fetchNFTNames(page: number) {\n    this.next = 0;\n    this.previous = 0;\n    this.getNFTNames(this.data.address, page).subscribe(response => {\n      this.dataSource11 = new MatTableDataSource<any>(response.results);\n      if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n        this.next = response.next.page;\n      }\n      if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n        this.previous = response.previous.page;\n      }\n    });\n  }\n\n  public getNFTNames(value: string, page: number): Observable<any> {\n    const url = this.baseUrl + '/nfts/address/name?address=' + value + (page > 0 ? '&page=' + page : '');\n    console.log(url);\n    return this.http.get<any>(url);\n  } \n}\n","<h1 mat-dialog-title>NFTs</h1>\n<div mat-dialog-content>\n  <table mat-table [dataSource]=\"dataSource11\">\n    <ng-container matColumnDef=\"name\">\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"collection_name\">\n      <mat-header-cell *matHeaderCellDef> Collection Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.collection_name}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"permalink\">\n        <mat-header-cell *matHeaderCellDef> Provider Page Link </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> <a class=\"nav-link\" href=\"{{element.permalink}}\" target=\"_blank\" style=\"cursor: pointer;\">View on Provider Page</a> </mat-cell>\n      </ng-container>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns11\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns11;\"></mat-row>\n  </table>\n</div>\n<div class=\"button-paginator\">\n    <button mat-raised-button color=\"success\" [ngStyle]=\"{ display: previous > 0 ? 'block': 'none' }\" (click)=\"fetchNFTNames(previous)\" style=\"cursor: pointer;\">Previous</button>\n    <button mat-raised-button color=\"success\" [ngStyle]=\"{ display: next > 0 ? 'block': 'none' }\" (click)=\"fetchNFTNames(next)\" style=\"cursor: pointer;\">Next</button>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  totalNfts: string = '0';\n  totalWallets: string = '0';\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    const url = 'http://52.22.129.105:9001/general/live';\n    this.http.get<any>(url).subscribe((response: any) => {\n      response.forEach(element => {\n        if(element.type === \"nfts\")\n          this.totalNfts = (Math.round(Number(element.count)) / 1000000).toFixed(2);\n        else if(element.type === \"wallets\")\n          this.totalWallets = (Math.round(Number(element.count)) / 1000000).toFixed(2);\n      });\n     });\n  }\n\n}\n","<div class=\"logo\"><a routerLink=\"/\"><img src=\"../../assets/images/logo.png\" alt=\"Logo\" /></a></div>\n<div class=\"live-feed\">\n    <h3>Total NFTs : <span>{{totalNfts}} M</span></h3>\n    <h3>Total Wallets : <span>{{totalWallets}} M</span></h3>\n</div>\n<div class=\"poweredby\">Powered by AXIOM</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>Copyright Kellton Tech</footer>\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport {map, startWith} from 'rxjs/operators';\nimport { debounce } from 'lodash'\nimport { MatAutocomplete } from '@angular/material/autocomplete';\nimport { LoaderService } from '../loader.service';\n\n@Component({\n  selector: 'app-token-name-search',\n  templateUrl: './token-name-search.component.html',\n  styleUrls: ['./token-name-search.component.scss']\n})\nexport class TokenNameSearchComponent implements OnInit {\n  @ViewChild(MatAutocomplete) matAutocomplete: MatAutocomplete;\n  baseUrl: string = 'http://52.22.129.105:9001';\n  selectedValue: string = '';\n  selectedSymbol: string = 'gt';\n  selectedOptionValue: string;\n  next: number = 0;\n  previous: number = 0;\n\n  records = [];\n\n  constructor(private http: HttpClient, private loader: LoaderService) { }\n\n  myControl = new FormControl('');\n  options: Observable<any>;\n\n  ngOnInit() {\n    this.InitialValues('');\n  }\n\n  @HostListener('document:click', ['$event'])\n  clickout(event) {\n    if (this.selectedValue === '') { } else {\n      this.matAutocomplete.options?.first?.select();\n    }\n  }\n\n  @Debounce(500)\n  onKeyUp(event: any) {\n    this.selectedValue = event.target.value;\n    this.InitialValues(this.selectedValue);\n  }\n\n  onScroll(value){\n    this.SendRequest(value, this.next);\n  }\n\n  InitialValues(value: string){\n    this.options = this.getInitialSearchValues(value).pipe(map(item => item.results));\n  }\n\n  displayFn(option?: any): string | undefined {\n    return option ? option.contract_name : undefined;\n  }\n\n  changeSelectedOption(event: any) {\n    this.selectedOptionValue = event.option.value.contract_address;\n  }\n\n  SendRequest(value: string, page: number) {\n    console.log(value);\n    console.log(this.selectedValue);\n    this.loader.displayProgressSpinnerInBlock = true;\n    if(page <= 1) this.records = [];\n    this.next = 0;\n    this.previous = 0;\n    this.getWalletAddressesForExactNameSearch(value, page).subscribe(response => {\n      response.results.forEach(element => {\n        this.records.push(element);\n      });\n      if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n        this.next = response.next.page;\n      }\n      if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n        this.previous = response.previous.page;\n      }\n      this.loader.displayProgressSpinnerInBlock = false;\n    });\n  }\n\n  public getWalletAddressesForExactNameSearch(value: string, page: number): Observable<any> {\n    const url = this.baseUrl + '/nfts/name/search?p=' + value + '&limit=50' + (page > 0 ? '&page=' + page : '');\n    return this.http.get<any>(url);\n  }\n\n  public getInitialSearchValues(value: string): Observable<any> {\n    const url = this.baseUrl + '/general/token/search?text=' + value;\n    return this.http.get<any>(url);\n  }\n}\n\nfunction Debounce(ms) {\n  return function(target: any, key: any, descriptor: any) {\n    const oldFunc = descriptor.value\n    const newFunc = debounce(oldFunc, ms)\n    descriptor.value = function() {\n        return newFunc.apply(this, arguments)\n    }\n  }\n}","<div class=\"center\">\n  <h1>Wallets containing nfts with exact name</h1>\n  <form class=\"flex-column align-center\">\n    <input\n      type=\"text\"\n      #todo\n      placeholder=\"Pick one\"\n      aria-label=\"Number\"\n      matInput\n      [formControl]=\"myControl\"\n      [matAutocomplete]=\"auto\"\n      (keyup)=\"onKeyUp($event)\"\n    />\n    <mat-autocomplete\n      #auto=\"matAutocomplete\"\n      [displayWith]=\"displayFn\"\n      (optionSelected)=\"changeSelectedOption($event)\"\n    >\n      <mat-optgroup *ngFor=\"let option of options | async\">\n        <mat-option [value]=\"option\"\n          ><strong>{{ option.contract_name }}</strong></mat-option\n        >\n        <mat-option [value]=\"option\">{{ option.contract_address }}</mat-option>\n      </mat-optgroup>\n    </mat-autocomplete>\n  </form>\n\n  <button\n    class=\"primary-btn\"\n    (click)=\"SendRequest(todo.value, 1)\"\n    style=\"cursor: pointer\"\n  >\n    Submit\n  </button>\n  <div class=\"result\" *ngIf=\"records && records.length > 0\">Results</div>\n\n  <div\n    class=\"result-wrapper flex justify-center\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"2\"\n    [infiniteScrollThrottle]=\"50\"\n    [scrollWindow]=\"true\"\n    [infiniteScrollContainer]=\"'.result-inner'\"\n    [fromRoot]=\"false\"\n    (scrolled)=\"onScroll('')\"\n  >\n    <div class=\"result-inner\">\n      <div class=\"row flex space-between\" *ngIf=\"records && records.length > 0\">\n        <div class=\"col head\">Name</div>\n        <div class=\"col head\">View Provider Page</div>\n        <div class=\"col head\">Wallet Address</div>\n        <div class=\"col head\">View on Etherscan</div>\n      </div>\n      <div class=\"row flex space-between\" *ngFor=\"let record of records\">\n        <div class=\"col flex align-center no-wrap\">{{ record.name }}</div>\n        <div class=\"col flex align-center\">\n          <a\n            href=\"{{ record.permalink }}\"\n            target=\"_blank\"\n            style=\"cursor: pointer\"\n            >View Provider Page</a\n          >\n        </div>\n        <div class=\"col flex align-center no-wrap\">\n          <img src=\"../../assets/images/wallet.png\" alt=\"Logo\" />\n          {{ record.owner_address }}\n        </div>\n        <div class=\"col flex align-center\">\n          <a\n            target=\"_blank\"\n            href=\"https://etherscan.io/nft/{{ record.contract_address }}/{{\n              record.token_id\n            }}\"\n            style=\"cursor: pointer\"\n            >View on Etherscan</a\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Options } from '@angular-slider/ngx-slider';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { MatInputModule } from '@angular/material/input';\nimport { LoaderService } from '../loader.service';\n\n@Component({\n  selector: 'app-range-content',\n  templateUrl: './range-content.component.html',\n  styleUrls: ['./range-content.component.scss']\n})\nexport class RangeContentComponent implements OnInit {\n\n  baseUrl: string = 'http://52.22.129.105:9001'; //'http://107.22.58.206:9000';\n  next: number = 0;\n  previous: number = 0;\n\n  minValue: number = 2;\n  maxValue: number = 8;\n  options: Options = {\n    floor: 0,\n    ceil: 1000,\n  };\n\n  records = [];\n\n  constructor(private http: HttpClient, private loader: LoaderService) { }\n\n  ngOnInit(): void {  }\n\n  onScroll(){\n    this.SendRequest(this.next);\n  }\n\n  SendRequest(page: number) {\n    this.next = 0;\n    this.previous = 0;\n    this.loader.displayProgressSpinnerInBlock = true;\n    if(page <= 1)\n      this.records = [];\n    \n    let symbol = localStorage.getItem('symbol');\n    this.getWalletAddressesForPriceRange(this.minValue, this.maxValue, page).subscribe(response => {\n      this.records = response.results;\n      if (response.next && response.next.page && response.next.page !== '' && response.next.page !== 0) {\n        this.next = response.next.page;\n      }\n      if (response.previous && response.previous.page && response.previous.page !== '' && response.previous.page !== 0) {\n        this.previous = response.previous.page;\n      }\n      this.loader.displayProgressSpinnerInBlock = false;\n    });\n  }\n\n  public getWalletAddressesForPriceRange(min: number, max: number, page: number): Observable<any> {\n    const url = this.baseUrl + '/nfts/price?gte=' + min + '&lte=' + max + '&limit=50' + (page > 0 ? '&page=' + page : '');\n    return this.http.get<any>(url);\n  }\n\n\n}\n","<div class=\"center\">\n    <h1>Wallets containing nfts having more than X price</h1>\n    <form class=\"flex column align-center\">\n        <div class=\"custom-slider\">\n            <ngx-slider [(value)]=\"minValue\" [(highValue)]=\"maxValue\" [options]=\"options\" ></ngx-slider>\n        </div>\n        <div class=\"min-max-inputs\">\n            <input matInput placeholder=\"Min\" name=\"minInput\" [(ngModel)]=\"minValue\" />\n            <input matInput placeholder=\"Max\" name=\"maxInput\" [(ngModel)]=\"maxValue\" />\n        </div>          \n        <button class=\"primary-btn\" (click)=\"SendRequest(1)\">Submit</button>\n    </form>\n\n    <div class=\"result\" *ngIf=\"records && records.length > 0\">Results</div>\n\n    <div class=\"result-wrapper flex justify-center\" infiniteScroll\n    [infiniteScrollDistance]=\"2\"\n    [infiniteScrollThrottle]=\"50\"\n    [scrollWindow]=\"true\"\n    [infiniteScrollContainer]=\"'.result-inner'\"\n    [fromRoot]=\"false\"\n    (scrolled)=\"onScroll()\">\n        <div class=\"result-inner\">\n            <div class=\"row flex space-between\" *ngIf=\"records && records.length > 0\">\n                <div class=\"col align-center head\">Wallet Address</div>\n            </div>\n            <div class=\"row flex space-between\" *ngFor=\"let record of records;\">\n                <div class=\"col flex align-center no-wrap\"><img src=\"../../assets/images/wallet.png\" alt=\"Logo\" /> {{record.owner_address}}</div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ByNftCountContentComponent } from './by-nft-count-content/by-nft-count-content.component';\nimport { CollectionNameSearchComponent } from './collection-name-search/collection-name-search.component';\nimport { ContentComponent } from './content/content.component';\nimport { RangeContentComponent } from './range-content/range-content.component';\nimport { TokenNameSearchComponent } from './token-name-search/token-name-search.component';\n\nconst routes: Routes = [\n  { path: 'name-search', component: TokenNameSearchComponent },\n  { path: '', component: ContentComponent },\n  { path: 'lt', component: ContentComponent },\n  { path: 'eq', component: ContentComponent },\n  { path: 'nft-gt', component: ByNftCountContentComponent },\n  { path: 'nft-lt', component: ByNftCountContentComponent },\n  { path: 'nft-eq', component: ByNftCountContentComponent },\n  { path: 'range', component: RangeContentComponent },\n  { path: 'collection-search', component: CollectionNameSearchComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}